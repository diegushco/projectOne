{"version":3,"sources":["webpack:///home/diego/SURA/Portales/node_modules/lodash/_baseSortBy.js","webpack:///home/diego/SURA/Portales/node_modules/lodash/_compareMultiple.js","webpack:///src/app/features/quoting/state/policy/policy.effects.ts","webpack:///src/app/features/quoting/components/quote/state/quote.effects.ts","webpack:///src/app/features/quoting/components/quote/containers/quote.component.ts","webpack:///home/diego/SURA/Portales/libs/features/ui/pipes/sort-by.pipe.ts","webpack:///src/app/features/quoting/components/quote/containers/quote.component.html","webpack:///src/app/features/quoting/components/quote/components/questions/questions.component.html","webpack:///src/app/features/quoting/components/quote/components/questions/questions.component.ts","webpack:///src/app/features/quoting/components/home/components/useconstruction/useconstruction.component.ts","webpack:///src/app/features/quoting/components/home/components/useconstruction/useconstruction.component.html","webpack:///src/app/features/quoting/components/home/components/m2/m2.component.html","webpack:///src/app/features/quoting/components/home/components/m2/m2.component.ts","webpack:///src/app/features/quoting/components/zones/zones.component.html","webpack:///src/app/features/quoting/components/zones/zones.component.ts","webpack:///src/app/features/quoting/components/quote/quote-routing.routing.ts","webpack:///src/app/features/quoting/components/quote/quote.module.ts","webpack:///home/diego/SURA/Portales/node_modules/lodash/_baseFlatten.js","webpack:///home/diego/SURA/Portales/node_modules/lodash/_baseMap.js","webpack:///home/diego/SURA/Portales/node_modules/lodash/_compareAscending.js","webpack:///home/diego/SURA/Portales/node_modules/lodash/_baseOrderBy.js","webpack:///home/diego/SURA/Portales/node_modules/lodash/_isFlattenable.js","webpack:///home/diego/SURA/Portales/node_modules/lodash/sortBy.js"],"names":["module","exports","array","comparer","length","sort","value","compareAscending","object","other","orders","index","objCriteria","criteria","othCriteria","ordersLength","result","PolicyEffects","QuoteEffects","QuoteComponent","SortByPipe","actions$","quotingService","storePolicy","storeQuote","coveragesAdapter","policyAdapter","loadCoverage$","this","pipe","LoadCoverageMotor","map","action","values","payload","currentMotor","concatMap","data","setGettingDataFromCoverageService","adapted","adaptEdit","motor","vehicles","forEach","ele","editCoverages","tap","x","vehicle","filter","v","number","patterns","p","coverages","options","k","pattern","code","c","terms","push","description","dispatch","zerokm","use","activity","destination","added","period","job","coverage","adapt","getCoverages","storeProducer","mechanicalAssistanceService","loadDefaultAssistance$","LoadCoverageSuccessMotor","switchMap","zip","of","select","serverDate","policy","producer","find","saleschannel","profile","channel","toString","type","model","date","format","vehicleage","getFullYear","year","activeMotor","getDefaultAssistances","config","id","resp","assistances","f","utilService","flowRouteService","route","super","routes","activeSubscriptions","technicalPricing","checkTechnicalPrice","loadRoutes","loadPeriodAndDate","subs","unsubscribe","subscription","combineLatest","getCurrentServerDate","subscribe","policyPeriod","start","currentDate","Date","datetime","end","method","rate","catalogHasTechnicalPricing","includes","catalogs","group","vehicleHasTechnicalPricing","vehicleType","visible","first","currentLine","line","MOTOR","active","setRouteStore","currentId","questionsRouteConfig","routeConfig","children","r","path","element","String","replace","workRoute","question","show","disabled","car","shortName","loadCurrentMotor","HOME","withLatestFrom","loadMotorRouteValues","age","driver","birth","diff","setValueQuestion","license","brand","shortModel","useName","statedamount","zone","city","errorQuoteModal","closeModal","location","reload","BaseComponent","order","column","QuestionsComponent","HomeUseConstructionComponent","router","routeActive","quoteSubscription","Subscription","homeData","motorData","quoteData","activeRoute","events","e","setTimeout","directiveRef","scrollToElement","item","event","el","console","log","KEY_CODE","ENTER","fb","homeUsesService","homeTypesService","constructionService","constructionSelect","modalRequireApproval","currentHome","form","homeUses","homeTypes","houses","quoteHomeSubscription","getUsesSubscription","getTypesSubscription","constructions$","currentHouse","key","homeUse","Validators","required","homeType","construction","getUses","getTypes","getAllConstructions","get","valueChanges","op","openModal","activeHome","h","setValue","emitEvent","house","constructionsItems","enableHomeRoute","M2Component","producerService","amountService","producersSubscription","disabledBtnProducer","policySubscription","loadingCoverage","listCoverages","packages","lottieConfig","payment","profileSubscription","getAllProducers","pro","prod","loadProfileProducer","m2Mask","prefix","thousandsSeparatorSymbol","m2","getProfile","loadCoverages","fiscalCondition","paymentMethod","productCode","adaptHome","fiscalcondition","productcode","setDefaultValues","coverages$","amounts$","getAmounts","postalcode","forkJoin","amounts","resultCoverage","orderCoverage","codeCoverage","filterCoverage","lc","category","block","codesBenefitsCoverages","BENEFITS","codesPlanPremiumsCoverages","PREMIUM","OTHERS","codesExcludeCoverages","editable","codesNoEditables","searchInherit","codesInheritable","ci","inherit","child","childs","sc","covChild","suggested","pk","home","dwellings","dw","pg","pck","patternTemp","termTemp","current","differentialcircuitbreaker","embeddedelectricalwiring","goodconditionelectric","soundalarmwithmonitoring","soundalarmonly","reinforceddoor","permanentvigilance","doublelock","defaultCovAll","navigateByUrl","cpForm","ZonesComponent","QuoteRoutingModule","locationService","provinceService","locationForm","showCPForm","provinces$","Observable","locations$","locationsSubscription","postalCode","province","provinces","locations","currentHouseNumber","isPostalCode","loadHomeData","selectPostalCode","getAllProvinces","maxLength","markAsDirty","enable","getLocations","disable","onlySelf","cp","getLocationAndProvince","state","setErrors","continueHome","provinceDescription","u","storeHomeData","component","forChild","playerFactory","QuoteModule","forFeature","forRoot","player","arrayPush","isFlattenable","baseFlatten","depth","predicate","isStrict","baseEach","isArrayLike","collection","iteratee","Array","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","arrayMap","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","iteratees","Symbol","isArguments","isArray","spreadableSymbol","isConcatSpreadable","baseOrderBy","baseRest","isIterateeCall","sortBy"],"mappings":"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","file":"x","sourcesContent":["/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","import { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { map, concatMap, tap } from 'rxjs/operators';\n// import * as fromMotorActions from '../state/motor.actions';\n// import * as fromMotorReducer from '../state/motor.reducer';\nimport * as fromQuoteActions from '../../components/quote/state/quote.actions';\nimport * as fromQuote from '../../components/quote/state';\n// import * as fromQuotingReducer from '../../../state/quoting.reducer';\n// import * as fromQuotingActions from '../../../state/quoting.actions';\nimport * as fromPolicy from '../policy';\nimport * as fromPolicyActions from '../policy/policy.actions';\nimport {\n  QuotingService,\n  ICoverageResponse,\n  IVehicle\n} from '@sura-platform/features';\nimport { Store } from '@ngrx/store';\nimport { CoveragesAdapter } from '../../adapters/coverages.adapter';\nimport { PolicyAdapter } from '../../adapters/policy.adapter';\n\n@Injectable()\nexport class PolicyEffects {\n  constructor(\n    private actions$: Actions,\n    private quotingService: QuotingService,\n    private storePolicy: Store<fromPolicy.State>,\n    private storeQuote: Store<fromQuote.State>,\n    private coveragesAdapter: CoveragesAdapter,\n    private policyAdapter: PolicyAdapter\n  ) {}\n\n  @Effect() loadCoverage$ = this.actions$.pipe(\n    ofType(fromQuoteActions.QuoteActionTypes.LoadCoverageMotor),\n    map((action: fromQuoteActions.LoadCoverageMotor) => {\n      return {\n        values: {\n          payload: action.payload,\n          currentMotor: action.currentMotor,\n          action: action.action\n        }\n      };\n    }),\n    concatMap((data: any) => {\n      this.quotingService.setGettingDataFromCoverageService(true);\n      if (data.values.action === 'add' || data.values.action === 'edit') {\n        const adapted = this.policyAdapter.adaptEdit(data.values.payload);\n        adapted.motor.vehicles.forEach((ele) => {\n          ele.action = data.values.action;\n        });\n        return this.quotingService.editCoverages(adapted).pipe(\n          tap((x) => {\n            const vehicle = data.values.payload.motor.vehicles.filter(\n              (v: IVehicle) => v.number === data.values.currentMotor.number\n            )[0];\n            if (vehicle) {\n              const patterns = x.motor.vehicles.map((p) => p.coverages);\n              let options =\n                patterns[0].length > 0\n                  ? patterns[0]\n                      .filter(\n                        (k) => k.pattern.code === 'SURA_CA7_ClausulaDeAjusteCov'\n                      )\n                      .map((c) => c.terms[0].options)[0]\n                  : null;\n\n              //FIXME: DG hardcodeado mientras arreglan API /coverages/edit\n              if (data.values.action === 'edit') {\n                options = [];\n                options.push({\n                  code: 'SURA_CA7_ClausulaDeAjusteOpt1',\n                  description: '0'\n                });\n                options.push({\n                  code: 'SURA_CA7_ClausulaDeAjusteOpt2',\n                  description: '10'\n                });\n              }\n\n              //! Si es cero km entonces seteo por defecto en 0% la clausula, de lo contrario\n              //! seteo un 10%\n              if (options && data.values.currentMotor.zerokm === true) {\n                this.storeQuote.dispatch(\n                  new fromQuoteActions.SetCurrentClauseMotor(options[0].code)\n                );\n              } else if (options) {\n                this.storeQuote.dispatch(\n                  new fromQuoteActions.SetCurrentClauseMotor(options[1].code)\n                );\n              } else {\n                this.storeQuote.dispatch(\n                  new fromQuoteActions.SetCurrentClauseMotor(null)\n                );\n              }\n\n              data.values.payload.motor.vehicles.forEach((v: IVehicle) => {\n                if (v.number === data.values.currentMotor.number) {\n                  v.use = x.motor.vehicles.filter(\n                    (k) => k.number === data.values.currentMotor.number\n                  )[0].use;\n                  v.activity = x.motor.vehicles.filter(\n                    (k) => k.number === data.values.currentMotor.number\n                  )[0].activity;\n                  v.destination = x.motor.vehicles.filter(\n                    (k) => k.number === data.values.currentMotor.number\n                  )[0].destination;\n\n                  //FIXME: DG, hardcodeado estos valores, hasta\n                  //que arreglen API con nueva respuesta de GW\n                  if (v.use === null || v.use === undefined) {\n                    v.use = 3;\n                  }\n                  if (v.destination === null || v.destination === undefined) {\n                    v.destination = 1;\n                  }\n                  if (v.activity === null || v.activity === undefined) {\n                    v.activity = 'AC_99';\n                  }\n                }\n              });\n\n              vehicle.added = true;\n              this.storePolicy.dispatch(\n                new fromPolicyActions.UpdateVehicleAction(\n                  data.values.payload.motor.vehicles\n                )\n              );\n            }\n          }),\n          tap((x) =>\n            this.storePolicy.dispatch(\n              new fromPolicyActions.SetPeriodData(x.period)\n            )\n          ),\n          tap((x) =>\n            this.storePolicy.dispatch(\n              new fromPolicyActions.SetJob(x.job.number)\n            )\n          ),\n          tap(() =>\n            this.quotingService.setGettingDataFromCoverageService(false)\n          ),\n          map(\n            (coverage: ICoverageResponse) =>\n              new fromQuoteActions.CoverageLoadedSuccessMotor(coverage)\n          ),\n          tap((x) => {\n            this.storeQuote.dispatch(\n              new fromQuoteActions.SetCoverageResponseMotor(x.payload)\n            );\n          })\n        );\n      } else if (data.values.action === null) {\n        const adapted = this.coveragesAdapter.adapt(data.values.payload);\n        return this.quotingService.getCoverages(adapted).pipe(\n          tap((x) => {\n            const vehicle = data.values.payload.motor.vehicles.filter(\n              (v: IVehicle) => v.number === data.values.currentMotor.number\n            )[0];\n            if (vehicle) {\n              const patterns = x.motor.vehicles.map((p) => p.coverages);\n              const options =\n                patterns[0].length > 0\n                  ? patterns[0]\n                      .filter(\n                        (k) => k.pattern.code === 'SURA_CA7_ClausulaDeAjusteCov'\n                      )\n                      .map((c) => c.terms[0].options)[0]\n                  : null;\n\n              //! Si es cero km entonces seteo por defecto en 0% la clausula, de lo contrario\n              //! seteo un 10%\n              if (options && data.values.currentMotor.zerokm === true) {\n                this.storeQuote.dispatch(\n                  new fromQuoteActions.SetCurrentClauseMotor(options[0].code)\n                );\n              } else if (options) {\n                this.storeQuote.dispatch(\n                  new fromQuoteActions.SetCurrentClauseMotor(options[1].code)\n                );\n              } else {\n                this.storeQuote.dispatch(\n                  new fromQuoteActions.SetCurrentClauseMotor(null)\n                );\n              }\n\n              data.values.payload.motor.vehicles.forEach((v: IVehicle) => {\n                if (v.number === data.values.currentMotor.number) {\n                  v.use = x.motor.vehicles.filter(\n                    (k) => k.number === data.values.currentMotor.number\n                  )[0].use;\n                  v.activity = x.motor.vehicles.filter(\n                    (k) => k.number === data.values.currentMotor.number\n                  )[0].activity;\n                  v.destination = x.motor.vehicles.filter(\n                    (k) => k.number === data.values.currentMotor.number\n                  )[0].destination;\n                }\n              });\n\n              this.storePolicy.dispatch(\n                new fromPolicyActions.UpdateVehicleAction(\n                  data.values.payload.motor.vehicles\n                )\n              );\n            }\n            this.storePolicy.dispatch(\n              new fromPolicyActions.SetPeriodData(x.period)\n            );\n            this.storePolicy.dispatch(\n              new fromPolicyActions.SetJob(x.job.number)\n            );\n            this.quotingService.setGettingDataFromCoverageService(false);\n          }),\n          map(\n            (coverage: ICoverageResponse) =>\n              new fromQuoteActions.CoverageLoadedSuccessMotor(coverage)\n          ),\n          tap((x) => {\n            this.storeQuote.dispatch(\n              new fromQuoteActions.SetCoverageResponseMotor(x.payload)\n            );\n          })\n        );\n      }\n    })\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, ofType, Effect } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { zip, of } from 'rxjs';\nimport { switchMap, map, concatMap } from 'rxjs/operators';\n\nimport * as fromQuote from './index';\nimport * as fromQuoteActions from './quote.actions';\nimport * as fromPolicy from '../../../state/policy';\nimport * as fromProducer from '../../../../producer/state/index';\nimport moment from 'moment';\nimport {\n  IDefaultAssistanceOptions,\n  MechanicalAssistanceService\n} from '@sura-platform/features';\n\n@Injectable()\nexport class QuoteEffects {\n  constructor(\n    private actions$: Actions,\n    private storeQuote: Store<fromQuote.State>,\n    private storePolicy: Store<fromPolicy.State>,\n    private storeProducer: Store<fromProducer.State>,\n    private mechanicalAssistanceService: MechanicalAssistanceService\n  ) {}\n\n  @Effect()\n  loadDefaultAssistance$ = this.actions$.pipe(\n    ofType(fromQuoteActions.QuoteActionTypes.LoadCoverageSuccessMotor),\n    // En esta respuesta obtengo el vehículo que fue modificado\n    switchMap((action: fromQuoteActions.CoverageLoadedSuccessMotor) =>\n      zip(\n        of(action.payload),\n        this.storePolicy.select(fromPolicy.getPolicyData),\n        this.storeProducer.select(fromProducer.getCurrentProducer),\n        this.storeQuote.select(fromQuote.getServerDate)\n      )\n    ),\n    // Transformo la data para llamar al servicio de asistencias\n    map(([coverage, policy, producer, serverDate]): [\n      number,\n      IDefaultAssistanceOptions\n    ] => {\n      const currentMotor = policy?.motor?.vehicles?.find(\n        (v) => v.number === coverage?.motor?.vehicles[0]?.number\n      );\n\n      return [\n        currentMotor?.number as number,\n        {\n          saleschannel: producer?.profile?.channel,\n          producer: producer?.code?.toString(),\n          type: currentMotor?.model?.type as string,\n          date: moment(serverDate).format('DD/MM/YYYY'),\n          vehicleage:\n            (serverDate?.getFullYear() as number) -\n            (currentMotor?.year as number)\n        }\n      ];\n    }),\n    // Llamada al servicio para obtener los datos de asistencia mecánica por defecto\n    concatMap(([activeMotor, options]) =>\n      this.mechanicalAssistanceService\n        .getDefaultAssistances(options)\n        .pipe(map((config) => ({ id: activeMotor, ...config })))\n    ),\n    map((resp) => {\n      if (!resp?.default && !resp?.assistances) {\n        return new fromQuoteActions.RemoveDefaultAssistanceAction(resp?.id);\n      }\n\n      return new fromQuoteActions.SetDefaultAssistanceAction(resp);\n    })\n  );\n}\n","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { IVehicle, UtilService } from '@sura-platform/features';\nimport { BaseComponent } from '@sura-platform/core';\nimport { IRoutes } from '../../../interfaces/routes.interface';\nimport { Store } from '@ngrx/store';\nimport { ModalComponent } from '@sura-platform/web';\nimport { ActivatedRoute } from '@angular/router';\nimport { lineGroup } from '../../../containers/line.enum';\nimport { combineLatest, Subscription } from 'rxjs';\nimport { switchMap, first, withLatestFrom } from 'rxjs/operators';\nimport { FlowRouteService } from '../services/flow-route.service';\nimport { MOTOR_CONF } from '../../motor/motor.config';\nimport moment from 'moment';\n\nimport * as fromQuote from '../../quote/state';\nimport * as fromQuoteActions from '../../quote/state/quote.actions';\nimport * as fromPolicy from '../../../state/policy';\nimport * as fromPolicyActions from '../../../state/policy/policy.actions';\nimport * as fromProducer from '../../../../producer/state';\nimport { IProducer } from '@sura-platform/features/producer';\n\n@Component({\n  selector: 'sxf-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: ['./quote.component.scss']\n})\nexport class QuoteComponent extends BaseComponent implements OnInit, OnDestroy {\n  /**\n   * Error modal\n   *\n   * @type {ModalComponent}\n   * @memberof QuoteComponent\n   */\n  @ViewChild('errorQuote') errorQuoteModal?: ModalComponent;\n\n  /**\n   * Current line\n   */\n  line?: string;\n\n  /**\n   * Current motor\n   */\n  currentMotor?: IVehicle;\n\n  /**\n   * Current quote routes\n   */\n  routes: IRoutes[] = [];\n\n  /**\n   * Active subscriptions\n   */\n  activeSubscriptions: Subscription[] = [];\n\n  /**\n   * Technical pricing status\n   */\n\n  technicalPricing = false;\n\n  constructor(\n    private storePolicy: Store<fromPolicy.State>,\n    private storeQuote: Store<fromQuote.State>,\n    private storeProducer: Store<fromProducer.State>,\n    private utilService: UtilService,\n    private flowRouteService: FlowRouteService,\n    private route: ActivatedRoute\n  ) {\n    super();\n  }\n\n  /**\n   * Initialize the component\n   *\n   * @memberof QuoteComponent\n   */\n  ngOnInit(): void {\n    // Verificar si posee o no technical pricing\n    this.checkTechnicalPrice();\n\n    // Cargar las rutas\n    this.loadRoutes();\n\n    this.loadPeriodAndDate();\n  }\n\n  /**\n   * Destroy the component\n   *\n   * @memberof QuoteComponent\n   */\n  ngOnDestroy(): void {\n    this.activeSubscriptions.forEach((subs) => subs?.unsubscribe());\n  }\n\n  /**\n   * Function used to fill the policy period data\n   *\n   * @memberof QuoteComponent\n   */\n  loadPeriodAndDate(): void {\n    const subscription = combineLatest([\n      this.storePolicy.select(fromPolicy.getPeriod),\n      this.utilService.getCurrentServerDate()\n    ]).subscribe(([policyPeriod, serverDate]) => {\n      if (policyPeriod.start === null) {\n        const currentDate = new Date(serverDate.datetime); // moment().add(9, 'month');\n        const date = {\n          start: currentDate,\n          end: null,\n          method: null,\n          rate: currentDate\n        };\n        this.storePolicy.dispatch(new fromPolicyActions.SetPeriodData(date));\n        this.storeQuote.dispatch(\n          new fromQuoteActions.SetServerDateAction(currentDate)\n        );\n      }\n    });\n\n    this.activeSubscriptions.push(subscription);\n  }\n\n  /**\n   * Listen producer data and enable or disable technical\n   * pricing based on catalogs\n   *\n   * @memberof QuoteComponent\n   */\n  checkTechnicalPrice(): void {\n    const subscription = combineLatest([\n      this.storeProducer.select(fromProducer.getCurrentProducer),\n      this.storePolicy.select(fromPolicy.getPolicyData),\n      this.storeQuote.select(fromQuote.getActiveMotor)\n    ]).subscribe(([producer, policy, activeMotor]) => {\n      // TODO: CATALOGOS HARDCODEADOS - TECHNICAL PRICING\n      const catalogHasTechnicalPricing = [3, 47].includes(\n        producer?.profile?.catalogs?.motor\n      );\n      if (!catalogHasTechnicalPricing) {\n        // Si no posee el catálogo necesario, deshabilito TP y salgo\n        if (this.technicalPricing !== catalogHasTechnicalPricing) {\n          this.technicalPricing = catalogHasTechnicalPricing;\n          this.storeQuote.dispatch(\n            new fromQuoteActions.SetTechnicalPricingAction(false)\n          );\n          this.loadRoutes();\n        }\n        return;\n      }\n\n      // Verificar si para el grupo de vehículo actual se debe\n      // habilitar technical pricing\n      const currentMotor = policy.motor.vehicles.find(\n        (v) => v.number === activeMotor\n      );\n\n      if (currentMotor?.group) {\n        const vehicleHasTechnicalPricing =\n          MOTOR_CONF.find((group) => group.vehicleType === currentMotor.group)\n            ?.technicalPricing.visible || false;\n\n        if (this.technicalPricing !== vehicleHasTechnicalPricing) {\n          this.technicalPricing = vehicleHasTechnicalPricing;\n          this.storeQuote.dispatch(\n            new fromQuoteActions.SetTechnicalPricingAction(\n              vehicleHasTechnicalPricing\n            )\n          );\n          this.loadRoutes();\n        }\n      }\n    });\n\n    this.activeSubscriptions.push(subscription);\n  }\n\n  /**\n   * Define current line and load routes\n   *\n   * @memberof QuoteComponent\n   */\n  loadRoutes(): void {\n    this.storeQuote\n      .select(fromQuote.getCurrentLine)\n      .pipe(\n        first(),\n        switchMap((currentLine) => {\n          // Definir la línea de cotización actual (motor, hogar)\n          // TODO: TIPADO INCORRECTO - VER QuoteReducer\n          this.line = currentLine as string;\n\n          // Según la línea, recuperar el ID actual\n          if (currentLine === lineGroup.MOTOR) {\n            return this.storeQuote\n              .select(fromQuote.getActiveMotor)\n              .pipe(first());\n          } else {\n            return this.storeQuote\n              .select(fromQuote.getQuoteHomeActiveHome)\n              .pipe(first());\n          }\n        })\n      )\n      // TODO: TIPADO INCORRECTO - Ver QuoteReducer\n      .subscribe((active) => this.setRouteStore(active as number));\n  }\n\n  /**\n   * Function used to load quote routes\n   *\n   * @param {number} currentId\n   * @memberof QuoteComponent\n   */\n  setRouteStore(currentId: number): void {\n    this.routes = [];\n\n    // Recupero todas las rutas del módulo 'questions'\n    const questionsRouteConfig = this.route.routeConfig?.children?.find(\n      (r) => r.path === 'questions'\n    );\n\n    if (questionsRouteConfig) {\n      questionsRouteConfig.children?.forEach((element) => {\n        const path = String(element.path).replace(':id', String(currentId));\n\n        if (path.length > 1 && this.line === element.data?.line) {\n          const workRoute = {\n            path: path,\n            question: element.data?.question,\n            show: element.data?.show,\n            disabled: element.data?.disabled,\n            car: currentId.toString(),\n            value: element.data?.value,\n            shortName: element.data?.shortName,\n            visible: element.data?.visible,\n            line: element.data?.line\n          };\n\n          // Visibilizo o oculto technical pricing\n          if (path.includes('age')) {\n            workRoute.visible = this.technicalPricing;\n          }\n\n          this.routes.push(workRoute);\n        }\n      });\n    }\n\n    // Cargar las rutas de MOTOR o HOME según corresponda\n    if (this.line === lineGroup.MOTOR) {\n      this.loadCurrentMotor();\n\n      this.storeQuote.dispatch(\n        new fromQuoteActions.SetRoutesMotor(this.routes)\n      );\n    } else if (this.line === lineGroup.HOME) {\n      this.storeQuote.dispatch(new fromQuoteActions.SetRoutesHome(this.routes));\n    }\n  }\n\n  /**\n   * If current line is MOTOR, then load currentMotor\n   *\n   * @memberof QuoteComponent\n   */\n  loadCurrentMotor(): void {\n    const subscription = combineLatest([\n      this.storeQuote.select(fromQuote.getActiveMotor),\n      this.storeProducer.select(fromProducer.getCurrentProducer)\n    ])\n      .pipe(withLatestFrom(this.storePolicy.select(fromPolicy.getPolicyData)))\n      .subscribe(([[activeMotor, producer], policy]) => {\n        const currentMotor = policy.motor.vehicles.find(\n          (v) => v.number === activeMotor\n        );\n\n        if (currentMotor) this.loadMotorRouteValues(currentMotor, producer);\n      });\n\n    this.activeSubscriptions.push(subscription);\n  }\n\n  /**\n   * Load all motor data in route values\n   *\n   * @param {IVehicle} vehicle\n   * @memberof QuoteComponent\n   */\n  loadMotorRouteValues(vehicle: IVehicle, producer: IProducer): void {\n    // Cálculo para technical pricing\n    let age: string | undefined;\n    if (vehicle.driver?.birth) {\n      const birth = moment(vehicle.driver.birth);\n      age = `${moment().diff(birth, 'years')} años`;\n    }\n\n    this.flowRouteService.setValueQuestion(\n      this.routes,\n      'producers',\n      `${producer.code} ${producer.description}`,\n      vehicle.use !== null || vehicle.number > 1\n    );\n\n    this.flowRouteService.setValueQuestion(\n      this.routes,\n      'patent',\n      vehicle.license || (vehicle.year && 'Pendiente') || '',\n      producer.description ? false : true\n    );\n\n    this.flowRouteService.setValueQuestion(\n      this.routes,\n      'year',\n      vehicle.year?.toString() || ''\n    );\n    this.flowRouteService.setValueQuestion(\n      this.routes,\n      'brand',\n      vehicle.brand.description || ''\n    );\n    this.flowRouteService.setValueQuestion(\n      this.routes,\n      'model',\n      vehicle.shortModel || ''\n    );\n    this.flowRouteService.setValueQuestion(\n      this.routes,\n      'version',\n      vehicle.model.description || ''\n    );\n    this.flowRouteService.setValueQuestion(\n      this.routes,\n      'use',\n      vehicle.useName || ''\n    );\n    this.flowRouteService.setValueQuestion(\n      this.routes,\n      'sum',\n      vehicle.statedamount?.toString() || ''\n    );\n    this.flowRouteService.setValueQuestion(\n      this.routes,\n      'location',\n      vehicle.zone.city || ''\n    );\n    this.flowRouteService.setValueQuestion(this.routes, 'age', age || '');\n\n    // Cargar rutas de MOTOR\n    this.storeQuote.dispatch(new fromQuoteActions.SetRoutesMotor(this.routes));\n  }\n\n  closeModal() {\n    this.errorQuoteModal?.closeModal();\n    location.reload();\n  }\n}\n","/*\n *ngFor=\"let c of oneDimArray | sortBy:'asc'\"\n *ngFor=\"let c of arrayOfObjects | sortBy:'asc':'propertyName'\"\n */\nimport { Pipe, PipeTransform } from '@angular/core';\nimport sortBy from 'lodash/sortBy';\n\n@Pipe({ name: 'sortBy' })\nexport class SortByPipe implements PipeTransform {\n  transform(value: any[], order = '', column: string = ''): any[] {\n    if (!value || order === '' || !order) {\n      return value;\n    } // no array\n    if (!column || column === '') {\n      return sortBy(value);\n    } // sort 1d array\n    if (value.length <= 1) {\n      return value;\n    } // array with only one item\n    return sortBy(value, [column], [order]);\n  }\n}\n","<router-outlet></router-outlet>\n\n<sxf-modal #errorQuote>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">\n      Error al Cotizar\n    </h4>\n    <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeModal()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button> -->\n  </div>\n  <div class=\"modal-body\">\n    <p>\n      La cotización solicitada no está disponible en este momento. Por favor,\n      volvé a intentarlo a través de la web de Productores. Muchas gracias.\n    </p>\n  </div>\n  <div class=\"modal-footer\">\n    <div class=\"offset-8 col-4\">\n      <button\n        type=\"button\"\n        class=\"btn btn-primary btn-lg btn-block\"\n        (click)=\"closeModal()\"\n      >\n        Aceptar\n      </button>\n    </div>\n  </div>\n</sxf-modal>\n","<div\n  class=\"row ps\"\n  style=\"position: relative; max-height: 80vh !important;\"\n  [perfectScrollbar]=\"{ suppressScrollY: false }\"\n>\n  <div class=\"questions col-lg-12\">\n    <ul class=\"timeline list-group\">\n      <ng-container *ngFor=\"let item of routes | sortBy: 'asc'\">\n        <ng-container *ngIf=\"item.line === line\">\n          <li\n            class=\"list-group-item\"\n            [ngClass]=\"{\n              active: item.path == routeActive,\n              questionactive: item.path == routeActive,\n              visited: !(item.value === null) && !(item.value.length < 1)\n            }\"\n            *ngIf=\"item.visible\"\n          >\n            <div class=\"row header\">\n              <div class=\"col-lg-8 offset-lg-2 line\">\n                <div class=\"float-right edit\">\n                  <span\n                    class=\"disabled-msg\"\n                    *ngIf=\"item.disabled && showMessage(item)\"\n                  >\n                    No editable en ésta instancia\n                  </span>\n                  <sxf-icon\n                    type=\"edit\"\n                    *ngIf=\"item.show && !item.disabled\"\n                    [routerLink]=\"item.path\"\n                    (click)=\"currentRoute(item.path)\"\n                    [disabled]=\"item.disabled\"\n                  ></sxf-icon>\n                </div>\n                <label class=\"mb-2\">\n                  {{\n                    item.value === null || item.value.length < 1\n                      ? item.question\n                      : item.shortName + ': '\n                  }}\n                  <span\n                    *ngIf=\"!(item.value === null) && !(item.value.length < 1)\"\n                    class=\"item-value\"\n                  >\n                    {{ item.value }}\n                  </span>\n                </label>\n              </div>\n            </div>\n            <div [ngbCollapse]=\"!(item.path == routeActive)\">\n              <div *ngIf=\"item.path == routeActive\">\n                <router-outlet></router-outlet>\n              </div>\n            </div>\n          </li>\n        </ng-container>\n      </ng-container>\n    </ul>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { IRoutes } from '@sura-platform/web/core/models/question/routes.interface';\nimport * as fromQuote from '../../state';\nimport * as fromQuoteActions from '../../state/quote.actions';\nimport { Store } from '@ngrx/store';\nimport { PerfectScrollbarDirective } from 'ngx-perfect-scrollbar';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { combineLatest, Subscription } from 'rxjs';\nimport { lineGroup } from '../../../../containers/line.enum';\n\n@Component({\n  selector: 'sxf-quote-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.scss']\n})\nexport class QuestionsComponent implements OnInit, OnDestroy {\n  @ViewChild(PerfectScrollbarDirective)\n  directiveRef?: PerfectScrollbarDirective;\n\n  constructor(\n    private storeQuote: Store<fromQuote.State>,\n    private router: Router\n  ) {}\n\n  // @ViewChild('perfectscroll') perfectscroll;\n\n  routes: IRoutes[] = <IRoutes[]>{};\n  routeActive = '';\n  line = '';\n\n  quoteSubscription: Subscription = new Subscription();\n\n  ngOnInit() {\n    this.quoteSubscription = combineLatest([\n      this.storeQuote.select(fromQuote.getCurrentLine),\n      this.storeQuote.select(fromQuote.getQuoteMotorData),\n      this.storeQuote.select(fromQuote.getQuoteHomeData)\n    ]).subscribe(([currentLine, motorData, homeData]) => {\n      this.line = currentLine as lineGroup;\n      let quoteData = null;\n      if (this.line === lineGroup.MOTOR) {\n        quoteData = motorData;\n      } else if (this.line === lineGroup.HOME) {\n        quoteData = homeData;\n      }\n\n      this.routeActive = quoteData?.activeRoute as string;\n\n      this.routes = quoteData?.routes as IRoutes[];\n      if (quoteData?.activeRoute === '') {\n        this.storeQuote.dispatch(\n          new fromQuoteActions.SetActiveRouteMotor(this.line + '/1/patent')\n        );\n      }\n    });\n\n    this.router.events\n      .pipe(filter((e): e is NavigationEnd => e instanceof NavigationEnd))\n      .subscribe(() => {\n        setTimeout(() => {\n          this.directiveRef?.scrollToElement('.questionactive', 0, 200);\n        }, 200);\n      });\n  }\n\n  /**\n   * Funtion used to show disabled message\n   *\n   * @param {IRoutes} item\n   * @returns\n   * @memberof QuestionsComponent\n   */\n  showMessage(item: IRoutes) {\n    // A futuro se puede meter acá si otra ruta requiere que\n    // se indique el mensaje\n    return item.path.includes('producers');\n  }\n\n  currentRoute(event: any) {\n    if (this.line === lineGroup.MOTOR) {\n      this.storeQuote.dispatch(new fromQuoteActions.SetActiveRouteMotor(event));\n    } else if (this.line === lineGroup.HOME) {\n      this.storeQuote.dispatch(\n        new fromQuoteActions.SetActiveRouteHomeAction(event)\n      );\n    }\n  }\n\n  scroll(el: HTMLElement) {\n    // this.perfectscroll.scrollToElement(el);\n    console.log(el);\n    // this.scrollbar.directiveRef.scrollToBottom(0, 500); // 500ms is the speed\n    // el.scrollIntoView();\n  }\n\n  ngOnDestroy(): void {\n    if (this.quoteSubscription) {\n      this.quoteSubscription.unsubscribe();\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  HostListener\n} from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Subscription, combineLatest, Observable } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport * as fromQuote from '../../../quote/state';\nimport * as fromPolicy from '../../../../state/policy';\nimport * as fromPolicyActions from '../../../../state/policy/policy.actions';\nimport { FlowRouteService } from '../../../quote/services/flow-route.service';\nimport { IRoutes } from '@sura-platform/web/core/models/question/routes.interface';\n\nimport {\n  HomeUsesService,\n  IHomeUses,\n  IHouse,\n  IHomeType,\n  HomeTypesService,\n  IConstruction,\n  ConstructionService\n} from '@sura-platform/features';\nimport { SelectComponent, ModalComponent } from '@sura-platform/web';\n\nexport enum KEY_CODE {\n  ENTER = 'Enter'\n}\n\n@Component({\n  selector: 'sxf-home-useconstruction',\n  templateUrl: './useconstruction.component.html',\n  styleUrls: ['./useconstruction.component.scss']\n})\nexport class HomeUseConstructionComponent implements OnInit, OnDestroy {\n  /**\n   * Construction select\n   */\n  @ViewChild('construction') constructionSelect: SelectComponent = <\n    SelectComponent\n  >{};\n\n  @ViewChild('modalRequireApproval', { static: true })\n  modalRequireApproval: ModalComponent = <ModalComponent>{};\n\n  /**\n   * Current house number\n   */\n  currentHome: number | null = 0;\n\n  /**\n   * Home routes\n   */\n  routes: IRoutes[] = <IRoutes[]>{};\n\n  /**\n   * Home use form\n   *\n   * @type {FormGroup}\n   * @memberof HomeUseComponent\n   */\n  form: FormGroup = <FormGroup>{};\n\n  /**\n   * List of home uses from service\n   *\n   * @type {Observable<IHomeUses[]>}\n   * @memberof HomeUseComponent\n   */\n  homeUses: IHomeUses[] = <IHomeUses[]>{};\n\n  /**\n   * List of home types from service\n   *\n   * @type {IHomeType[]}\n   * @memberof HomeTypeComponent\n   */\n  homeTypes: IHomeType[] = <IHomeType[]>{};\n\n  /**\n   * All houses\n   */\n  houses: IHouse[] = <IHouse[]>{};\n\n  quoteHomeSubscription: Subscription = new Subscription();\n  getUsesSubscription: Subscription = new Subscription();\n  getTypesSubscription: Subscription = new Subscription();\n\n  /**\n   * Construction observable\n   */\n  constructions$: Observable<IConstruction[]> = <Observable<IConstruction[]>>{};\n\n  /**\n   * Current House of houses vector\n   */\n  currentHouse: IHouse = <IHouse>{};\n\n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    if (event.key === KEY_CODE.ENTER) {\n      this.continue();\n    }\n  }\n\n  constructor(\n    private storeQuote: Store<fromQuote.State>,\n    private storePolicy: Store<fromPolicy.State>,\n    private flowRouteService: FlowRouteService,\n    private fb: FormBuilder,\n    public homeUsesService: HomeUsesService,\n    private homeTypesService: HomeTypesService,\n    public constructionService: ConstructionService\n  ) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      homeUse: ['permanent', Validators.required],\n      homeType: ['homePlantaBPrimerP', Validators.required],\n      construction: ['MatConstSolCeiHOESura', Validators.required]\n    });\n\n    this.getUsesSubscription = this.homeUsesService\n      .getUses()\n      .subscribe((data) => {\n        this.homeUses = data;\n      });\n\n    this.getTypesSubscription = this.homeTypesService\n      .getTypes()\n      .subscribe((data) => {\n        this.homeTypes = data;\n      });\n\n    this.constructions$ = this.constructionService.getAllConstructions();\n\n    this.form.get('construction')?.valueChanges.subscribe((op) => {\n      if (op === 'WoodConstHOESura') {\n        this.modalRequireApproval.openModal();\n      }\n    });\n\n    this.quoteHomeSubscription = combineLatest([\n      this.storePolicy.select(fromQuote.getQuoteHomeData),\n      this.storeQuote.select(fromPolicy.getHouses)\n    ]).subscribe(([homeData, houses]) => {\n      this.currentHome = homeData.activeHome;\n      this.routes = homeData.routes;\n      this.houses = houses;\n      this.currentHouse = <IHouse>(\n        this.houses.find((h) => h.id === this.currentHome)\n      );\n      if (this.currentHouse && this.currentHouse.use) {\n        this.form\n          .get('homeUse')\n          ?.setValue(this.currentHouse.use, { emitEvent: false });\n      }\n      if (this.currentHouse && this.currentHouse.use) {\n        this.form\n          .get('homeType')\n          ?.setValue(this.currentHouse.type, { emitEvent: false });\n      }\n      if (this.currentHouse && this.currentHouse.use) {\n        this.form\n          .get('construction')\n          ?.setValue(this.currentHouse.construction, { emitEvent: false });\n      }\n    });\n  }\n\n  /**\n   * Method use to go to the next question\n   *\n   * @memberof HomeUseComponent\n   */\n  continue() {\n    const homeUse = this.form.get('homeUse')?.value;\n    const house = this.houses.find(\n      (data: any) => data.id === this.currentHome\n    ) as IHouse;\n    house.use = homeUse;\n    this.storePolicy.dispatch(\n      new fromPolicyActions.UpdateHouseAction(this.houses)\n    );\n\n    const homeType = this.form.get('homeType')?.value;\n    house.type = homeType;\n    this.storePolicy.dispatch(\n      new fromPolicyActions.UpdateHouseAction(this.houses)\n    );\n\n    const constructionsItems: IConstruction[] = <IConstruction[]>(\n      this.constructionSelect.items\n    );\n\n    const construction = this.form.get('construction')?.value;\n    house.construction = construction;\n    this.storePolicy.dispatch(\n      new fromPolicyActions.UpdateHouseAction(this.houses)\n    );\n\n    this.flowRouteService.enableHomeRoute(\n      this.currentHome as number,\n      this.routes,\n      'm2',\n      'useconstruction',\n      this.homeUses?.find((data) => data.code === homeUse)?.description +\n        ', ' +\n        this.homeTypes?.find((data) => data.code === homeType)?.description +\n        ', ' +\n        constructionsItems?.find((data) => data.code === construction)\n          ?.description\n    );\n  }\n\n  ngOnDestroy(): void {\n    if (this.quoteHomeSubscription) this.quoteHomeSubscription.unsubscribe();\n    if (this.getUsesSubscription) this.getUsesSubscription.unsubscribe();\n    if (this.getTypesSubscription) this.getTypesSubscription.unsubscribe();\n  }\n}\n","<div [formGroup]=\"form\">\n  <div class=\"row mb-3\">\n    <div class=\"col-lg-3 offset-lg-2 pl-0\">\n      <label class=\"label-regular\">\n        Tipo de vivienda\n      </label>\n      <sxf-select\n        #types\n        formControlName=\"homeType\"\n        [items]=\"homeTypes\"\n        bindLabel=\"description\"\n        bindValue=\"code\"\n        [multiple]=\"false\"\n        class=\"custom\"\n        [searchable]=\"false\"\n        placeholder=\"Tipo de vivienda\"\n        [dropdownPosition]=\"'bottom'\"\n        name=\"home_type\"\n      ></sxf-select>\n    </div>\n  </div>\n\n  <div class=\"row mb-3\">\n    <div class=\"col-lg-3 offset-lg-2 pl-0\">\n      <label class=\"label-regular\">\n        Uso de la vivienda\n      </label>\n      <sxf-select\n        #uses\n        formControlName=\"homeUse\"\n        [items]=\"homeUses\"\n        bindLabel=\"description\"\n        bindValue=\"code\"\n        [multiple]=\"false\"\n        class=\"custom\"\n        [searchable]=\"false\"\n        placeholder=\"Uso de vivienda\"\n        [dropdownPosition]=\"'bottom'\"\n        name=\"home_use\"\n      ></sxf-select>\n    </div>\n  </div>\n\n  <div class=\"row mb-3\">\n    <div class=\"col-lg-3 offset-lg-2 pl-0\">\n      <label class=\"label-regular\">\n        Construcción de la vivienda\n      </label>\n      <sxf-select\n        #construction\n        formControlName=\"construction\"\n        [items]=\"constructions$ | async\"\n        bindLabel=\"description\"\n        bindValue=\"code\"\n        [multiple]=\"false\"\n        class=\"custom\"\n        [searchable]=\"false\"\n        placeholder=\"Seleccione el tipo de Construcción\"\n        [dropdownPosition]=\"'bottom'\"\n        name=\"construction\"\n      ></sxf-select>\n    </div>\n  </div>\n</div>\n\n<div class=\"row mb-3\">\n  <div class=\"col-lg-2 offset-lg-2 pl-0\">\n    <button\n      [disabled]=\"!construction.items || !uses.items || !types.items\"\n      name=\"continue\"\n      class=\"btn btn-primary btn-block btn-heft\"\n      (click)=\"continue()\"\n    >\n      Continuar\n    </button>\n  </div>\n  <div class=\"col-lg-2 press-enter\">\n    o presiona ENTER\n  </div>\n</div>\n\n<sxf-modal #modalRequireApproval (closed)=\"modalRequireApproval.closeModal()\">\n  <div class=\"modal-header\" style=\"padding: 1rem 2rem;\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Advertencia</h4>\n    <button\n      type=\"button\"\n      class=\"close\"\n      aria-label=\"Close\"\n      (click)=\"modalRequireApproval.closeModal('Cross click')\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <h4>\n      El tipo de construcción solicitada requiere la aprobación de la compañía.\n    </h4>\n  </div>\n  <div class=\"modal-footer\">\n    <div class=\"row\">\n      <div class=\"col-lg-5 offset-lg-7 pl-0\">\n        <button\n          type=\"button\"\n          class=\"btn btn-primary btn-lg btn-block\"\n          (click)=\"modalRequireApproval.closeModal('continue')\"\n        >\n          Continuar\n        </button>\n      </div>\n    </div>\n  </div>\n</sxf-modal>\n","<ng-container *ngIf=\"!loadingCoverage; else stillLoadingCoverage\">\n  <div [formGroup]=\"form\">\n    <div class=\"row mb-3\">\n      <div class=\"col-lg-6 offset-lg-2 pl-0\">\n        <p class=\"description\">\n          Con este dato podremos darte sumas sugeridas para cada cobertura\n        </p>\n      </div>\n      <div class=\"col-lg-3 offset-lg-2 pl-0\">\n        <div class=\"form-group\">\n          <sxf-textbox\n            type=\"text\"\n            name=\"m2\"\n            formControlName=\"m2\"\n            label=\"Metros cuadrados\"\n            placeholder=\"Ingresá los M2 de la vivienda\"\n            (keyup.enter)=\"continue()\"\n            [mask]=\"m2Mask\"\n          ></sxf-textbox>\n        </div>\n      </div>\n    </div>\n    \u0001\n  </div>\n\n  <div class=\"row mb-3\">\n    <div class=\"col-lg-2 offset-lg-2 pl-0\">\n      <button\n        [disabled]=\"!form.valid || !disabledBtnProducer\"\n        name=\"continue\"\n        class=\"btn btn-primary btn-block btn-heft\"\n        (click)=\"continue()\"\n      >\n        Continuar\n      </button>\n    </div>\n    <div class=\"col-lg-2 press-enter\">\n      o presiona ENTER\n    </div>\n  </div>\n\n  <div class=\"row mb-3\">\n    <div class=\"col-lg-6 offset-lg-2 pl-0\">\n      <h3 class=\"link\">Ingresar el valor de la propiedad</h3>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #stillLoadingCoverage>\n  <div class=\"row\">\n    <div class=\"col-12 text-center\">\n      <ng-lottie\n        [options]=\"lottieConfig\"\n        width=\"8.75rem\"\n        height=\"6.25rem\"\n      ></ng-lottie>\n    </div>\n  </div>\n</ng-template>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Subscription, combineLatest, forkJoin } from 'rxjs';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport * as fromQuote from '../../../quote/state';\nimport * as fromPolicy from '../../../../state/policy';\n//import * as fromPolicyActions from '../../../../state/policy/policy.actions';\nimport { FlowRouteService } from '../../../quote/services/flow-route.service';\nimport { IRoutes } from '@sura-platform/web/core/models/question/routes.interface';\nimport * as fromPolicyActions from '../../../../state/policy/policy.actions';\nimport {\n  IHouse,\n  AmountsService,\n  QuotingService,\n  IPolicy,\n  IAmounts,\n  IPackage,\n  IPayment\n} from '@sura-platform/features';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\nimport { ProducerService } from '@sura-platform/features/producer';\nimport { tap } from 'rxjs/operators';\nimport * as fromProducer from '../../../../../producer/state';\nimport * as fromProducerActions from '../../../../../producer/state/producer.actions';\nimport { CoveragesAdapter } from '../../../../adapters/coverages.adapter';\nimport { HOME_CONF } from '../../home.config';\nimport { blockTypeCoverages } from '../coverage/listcoverages.enum';\nimport * as fromQuoteActions from '../../../quote/state/quote.actions';\nimport { ITerm, IPattern } from '@sura-platform/features/coverage';\nimport { AnimationOptions } from 'ngx-lottie';\nimport { Router } from '@angular/router';\nimport cloneDeep from 'lodash/cloneDeep';\n\nexport enum KEY_CODE {\n  ENTER = 'Enter'\n}\n\n@Component({\n  selector: 'sxf-home-m2',\n  templateUrl: './m2.component.html',\n  styleUrls: ['./m2.component.scss']\n})\nexport class M2Component implements OnInit, OnDestroy {\n  /**\n   * Current house number\n   */\n  currentHome: number | null = 0;\n\n  /**\n   * Home routes\n   */\n  routes: IRoutes[] = <IRoutes[]>{};\n\n  /**\n   * All houses\n   */\n  houses: IHouse[] = <IHouse[]>{};\n\n  quoteHomeSubscription: Subscription = new Subscription();\n\n  /**\n   * Current House of houses vector\n   */\n  currentHouse: IHouse = <IHouse>{};\n\n  /**\n   * Home m2 form\n   *\n   * @type {FormGroup}\n   * @memberof M2Component\n   */\n  form: FormGroup = <FormGroup>{};\n\n  m2Mask: any;\n\n  producersSubscription: Subscription = new Subscription();\n\n  disabledBtnProducer = false;\n\n  policySubscription: Subscription = new Subscription();\n\n  /**\n   * Current policy\n   */\n  policy: IPolicy = <IPolicy>{};\n\n  loadingCoverage = false;\n\n  listCoverages: IAmounts = <IAmounts>{};\n\n  packages: any = <any>{};\n\n  /**\n   * Lottie animations.\n   */\n  lottieConfig: AnimationOptions = {\n    path: '/assets/loadings/sura-loader.json'\n  };\n\n  payment: IPayment = <IPayment>{};\n\n  profileSubscription: Subscription = new Subscription();\n\n  constructor(\n    private storeQuote: Store<fromQuote.State>,\n    private storePolicy: Store<fromPolicy.State>,\n    private flowRouteService: FlowRouteService,\n    private fb: FormBuilder,\n    private producerService: ProducerService,\n    private storeProducer: Store<fromProducer.State>,\n    private amountService: AmountsService,\n    private quotingService: QuotingService,\n    private coveragesAdapter: CoveragesAdapter,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.producersSubscription = this.producerService\n      .getAllProducers()\n      .pipe(\n        tap((pro) => {\n          const producer = pro[0].code;\n          this.storeProducer.dispatch(\n            new fromProducerActions.SetCurrentProducerAction(producer)\n          );\n\n          this.storePolicy.dispatch(\n            new fromPolicyActions.SetCurrentProducerAction(producer)\n          );\n        })\n      )\n      .subscribe((prod) => {\n        this.loadProfileProducer(prod[0].code);\n      });\n\n    this.policySubscription = this.storePolicy\n      .select(fromPolicy.getPolicyData)\n      .subscribe((policy: IPolicy) => {\n        this.policy = policy;\n      });\n\n    this.m2Mask = createNumberMask({\n      prefix: '',\n      thousandsSeparatorSymbol: '.'\n    });\n\n    this.form = this.fb.group({\n      m2: [null, [Validators.required]]\n    });\n\n    this.quoteHomeSubscription = combineLatest([\n      this.storePolicy.select(fromQuote.getQuoteHomeData),\n      this.storeQuote.select(fromPolicy.getHouses)\n    ]).subscribe(([homeData, houses]) => {\n      this.currentHome = homeData.activeHome;\n      this.routes = <IRoutes[]>homeData.routes;\n      this.houses = houses;\n      this.currentHouse = <IHouse>(\n        this.houses.find((h) => h.id === this.currentHome)\n      );\n    });\n\n    // this.form.get('m2').valueChanges.subscribe((m2) => {\n    //   console.log('M2', m2);\n    // });\n  }\n\n  //FIXME: DG esto es temporal mientras se agrega stepper\n  loadProfileProducer(code: any) {\n    this.profileSubscription = this.producerService\n      .getProfile(code)\n      .subscribe((profile) => {\n        this.disabledBtnProducer = true;\n        this.storeProducer.dispatch(\n          new fromProducerActions.SetCurrentProducerProfile(profile)\n        );\n      });\n  }\n\n  /**\n   * Method use to go to the next question\n   *\n   * @memberof HomeUseComponent\n   */\n  continue() {\n    const house = this.houses.find(\n      (data: any) => data.id === this.currentHome\n    ) as IHouse;\n    house.m2 = this.form.get('m2')?.value;\n    this.storePolicy.dispatch(\n      new fromPolicyActions.UpdateHouseAction(this.houses)\n    );\n    this.flowRouteService.enableHomeRoute(\n      this.currentHome as number,\n      this.routes,\n      'm2',\n      'm2',\n      this.form.get('m2')?.value\n    );\n\n    this.loadCoverages();\n  }\n\n  //us-8124\n  setDefaultValues(fiscalCondition: any, paymentMethod: any, productCode: any) {\n    this.payment = {\n      ...this.payment,\n      method: paymentMethod\n    };\n\n    this.storePolicy.dispatch(\n      new fromPolicyActions.SetCurrentFiscalConditionAction(fiscalCondition)\n    );\n\n    this.storePolicy.dispatch(\n      new fromPolicyActions.SetCurrentPaymentMethodAction(this.payment)\n    );\n\n    this.storePolicy.dispatch(\n      new fromPolicyActions.SetCurrenProductCodeAction(productCode)\n    );\n  }\n\n  loadCoverages() {\n    this.loadingCoverage = true;\n    const policy: IPolicy = this.coveragesAdapter.adaptHome(this.policy);\n    //valores por defecto, segun US-8124\n    //luego se cambiaran al poner el sidebar de resumen\n    policy.fiscalcondition = 'consumidorFinal';\n    policy.payment.method = 'CreditCard';\n    policy.productcode = 'Homeowners';\n\n    this.setDefaultValues(\n      policy.fiscalcondition,\n      policy.payment.method,\n      policy.productcode\n    );\n\n    const coverages$ = this.quotingService.getCoverages(policy);\n\n    const amounts$ = this.amountService.getAmounts(\n      this.currentHouse.type as string,\n      this.currentHouse.m2 as number,\n      this.currentHouse.zone.city as string,\n      `${this.currentHouse.zone.postalcode}`\n    );\n\n    forkJoin([coverages$, amounts$])\n      .pipe(\n        tap(([coverages, amounts]) => {\n          const resultCoverage: any = coverages;\n          this.listCoverages.coverages = [];\n\n          HOME_CONF.orderCoverage.forEach((codeCoverage) => {\n            const filterCoverage = amounts.coverages.find(\n              (lc) => lc.pattern.code === codeCoverage\n            );\n            if (filterCoverage) {\n              if (\n                HOME_CONF.codesBenefitsCoverages.includes(\n                  filterCoverage.pattern.code\n                )\n              ) {\n                filterCoverage.category.block = blockTypeCoverages.BENEFITS;\n              } else if (\n                HOME_CONF.codesPlanPremiumsCoverages.includes(\n                  filterCoverage.pattern.code\n                )\n              ) {\n                filterCoverage.category.block = blockTypeCoverages.PREMIUM;\n              } else {\n                filterCoverage.category.block = blockTypeCoverages.OTHERS;\n              }\n\n              filterCoverage.category.visible = HOME_CONF.codesExcludeCoverages.includes(\n                filterCoverage.pattern.code\n              )\n                ? false\n                : true;\n              filterCoverage.category.editable = HOME_CONF.codesNoEditables.includes(\n                filterCoverage.pattern.code\n              )\n                ? false\n                : true;\n\n              const searchInherit = HOME_CONF.codesInheritable.find(\n                (ci) => ci.code === filterCoverage.pattern.code\n              );\n              if (searchInherit) {\n                filterCoverage.inherit = true;\n                filterCoverage.child = [];\n                searchInherit.childs.forEach((sc) => {\n                  const covChild = amounts.coverages.find(\n                    (lc) => lc.pattern.code === sc\n                  );\n                  if (covChild) {\n                    filterCoverage?.child?.push({\n                      description: covChild.pattern.description,\n                      suggested: <string>covChild.terms[0].value.suggested\n                    });\n                  }\n                });\n              } else {\n                filterCoverage.inherit = false;\n              }\n              this.listCoverages.coverages.push(filterCoverage);\n            } //else { //no tiene suma asegurada\n            //   console.log('NO ENTRA:' + codeCoverage);\n            // }\n          });\n\n          this.storeQuote.dispatch(\n            new fromQuoteActions.SetSuggestedSumsAction(this.listCoverages)\n          );\n\n          this.storePolicy.dispatch(\n            new fromPolicyActions.SetJob(coverages.job.number)\n          );\n          this.storePolicy.dispatch(\n            new fromPolicyActions.SetPeriodData(coverages.period)\n          );\n\n          this.currentHouse.packages = [];\n          HOME_CONF.packages.forEach((pk) => {\n            if (\n              resultCoverage.home.dwellings\n                .find((dw: any) => dw.number === this.currentHome)\n                .packages.find((pg: any) => pg.code === pk.code)\n            ) {\n              const pck: IPackage = <IPackage>{};\n              pck.code = pk.code;\n              pck.description = pk.description;\n              pck.coverages = [];\n              pk.coverages.map((code: string) => {\n                const filterCoverage = amounts.coverages.find(\n                  (lc) => lc.pattern.code === code\n                );\n\n                const termTemp: ITerm[] = [];\n                termTemp.push({\n                  code: <string>(\n                    (filterCoverage ? filterCoverage.terms[0].code : null)\n                  ),\n                  value: {\n                    current: <string>(\n                      (filterCoverage\n                        ? filterCoverage.terms[0].value.suggested\n                        : null)\n                    )\n                  },\n                  options: null\n                });\n\n                let patternTemp: IPattern = <IPattern>{};\n                patternTemp = {\n                  code: code,\n                  description: <string>(\n                    (filterCoverage ? filterCoverage.pattern.description : null)\n                  )\n                };\n                pck?.coverages?.push({\n                  pattern: patternTemp,\n                  terms: termTemp\n                });\n              });\n              this.currentHouse?.packages?.push(pck);\n            }\n            //pck.coverages\n          });\n\n          const result = resultCoverage.home.dwellings.find(\n            (dw: any) => dw.number === this.currentHome\n          );\n\n          this.currentHouse = <IHouse>(\n            this.houses.find((h) => h.id === this.currentHome)\n          );\n\n          if (this.currentHouse) {\n            this.currentHouse.differentialcircuitbreaker =\n              result?.differentialcircuitbreaker;\n            this.currentHouse.embeddedelectricalwiring =\n              result?.embeddedelectricalwiring;\n            this.currentHouse.goodconditionelectric =\n              result?.goodconditionelectric;\n            this.currentHouse.soundalarmwithmonitoring =\n              result?.soundalarmwithmonitoring;\n            this.currentHouse.soundalarmonly = result?.soundalarmonly;\n            this.currentHouse.reinforceddoor = result?.reinforceddoor;\n            this.currentHouse.permanentvigilance = result?.permanentvigilance;\n            this.currentHouse.doublelock = result?.doublelock;\n          }\n\n          this.storePolicy.dispatch(\n            new fromPolicyActions.UpdateHouseAction(this.houses)\n          );\n\n          //separo coverages por default\n          //porque la visual de chulitos y X se debe mantener\n          //y sin embargo se podria cotizar una sola cobertura\n          //y no las default\n          const defaultCovAll = <IHouse[]>cloneDeep(this.houses);\n          this.storeQuote.dispatch(\n            new fromQuoteActions.SetDefaultCoverageByPckAction(defaultCovAll)\n          );\n        })\n      )\n      .subscribe(() => {\n        this.loadingCoverage = false;\n        this.router.navigateByUrl('/quoting/home/coverage/' + this.currentHome);\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.quoteHomeSubscription) this.quoteHomeSubscription.unsubscribe();\n    if (this.producersSubscription) this.producersSubscription.unsubscribe();\n    if (this.profileSubscription) this.profileSubscription.unsubscribe();\n  }\n}\n","<div *ngIf=\"showCPForm\">\n  <div class=\"row pt-4 mb-5\">\n    <div class=\"col-lg-8 offset-lg-2 pl-0\">\n      <div [formGroup]=\"cpForm\">\n        <div class=\"row\">\n          <div class=\"col-lg-4\">\n            <sxf-textbox\n              (keydown.enter)=\"\n                searchByPostalCode(cpForm.get('postalCode').value)\n              \"\n              label=\"Código postal\"\n              type=\"text\"\n              formControlName=\"postalCode\"\n              placeholder=\"Ingresá el código postal\"\n              [helpFeedback]=\"''\"\n              placement=\"bottom\"\n              [maxLength]=\"4\"\n              name=\"postal_code\"\n              invalidFeedback=\"El código postal no es válido\"\n            ></sxf-textbox>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row mb-3\">\n    <div class=\"col-lg-8 offset-lg-2 pl-0\">\n      <span>\n        <button\n          [disabled]=\"\n            !cpForm.valid ||\n            cpForm.get('postalCode').value === '' ||\n            cpForm.pristine\n          \"\n          class=\"btn btn-primary btn-heft\"\n          (click)=\"searchByPostalCode(cpForm.get('postalCode').value)\"\n          name=\"postalCodeBtn\"\n        >\n          Continuar\n        </button>\n      </span>\n      <span class=\"press-enter ml-3 mr-4\">\n        o presiona ENTER\n      </span>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-lg-8 offset-lg-2 pl-0\">\n      <button name=\"nextBtn\" class=\"btn next px-0\" (click)=\"selectLocation()\">\n        Ingresar Provincia y Localidad\n      </button>\n    </div>\n  </div>\n</div>\n\n<!-- Province and location -->\n<form\n  *ngIf=\"!showCPForm\"\n  [formGroup]=\"locationForm\"\n  (submit)=\"searchByProvinceLocation()\"\n  (keydown.enter)=\"searchByProvinceLocation()\"\n>\n  <div class=\"row pt-2 mb-5\">\n    <div class=\"col-lg-8 offset-lg-2 pl-0\">\n      <div class=\"row\">\n        <div class=\"col-lg-4\">\n          <label>\n            Provincia\n            <sup>*</sup>\n          </label>\n          <sxf-select\n            #province\n            formControlName=\"province\"\n            disabledOnEmpty=\"true\"\n            [items]=\"provinces$\"\n            bindLabel=\"description\"\n            bindValue=\"code\"\n            [multiple]=\"false\"\n            class=\"custom\"\n            [searchable]=\"true\"\n            placeholder=\"Provincia\"\n            [dropdownPosition]=\"'bottom'\"\n            name=\"province\"\n          ></sxf-select>\n        </div>\n        <div class=\"col-lg-4\">\n          <label>\n            Localidad\n            <sup>*</sup>\n          </label>\n          <sxf-select\n            #location\n            formControlName=\"location\"\n            disabledOnEmpty=\"true\"\n            [items]=\"locations$\"\n            bindLabel=\"city\"\n            bindValue=\"city\"\n            [multiple]=\"false\"\n            class=\"custom\"\n            [searchable]=\"true\"\n            placeholder=\"Localidad\"\n            [dropdownPosition]=\"'bottom'\"\n            name=\"location\"\n          ></sxf-select>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row mb-3\">\n    <div class=\"col-lg-8 offset-lg-2 pl-0\">\n      <span>\n        <button\n          [disabled]=\"!locationForm.valid\"\n          class=\"btn btn-primary btn-heft\"\n          type=\"submit\"\n          name=\"continueBtn\"\n        >\n          Continuar\n        </button>\n      </span>\n      <span class=\"press-enter ml-3 mr-4\">\n        o presiona ENTER\n      </span>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-lg-8 offset-lg-2 pl-0\">\n      <button name=\"nextBtn\" class=\"btn next px-0\" (click)=\"selectPostalCode()\">\n        Ingresar código postal\n      </button>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Observable, Subscription, combineLatest } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\n\nimport { BaseComponent } from '@sura-platform/core';\nimport {\n  LocationService,\n  ProvinceService,\n  IProvince,\n  ILocation,\n  IHouse\n} from '@sura-platform/features';\nimport { FlowRouteService } from '../quote/services/flow-route.service';\nimport * as fromQuote from '../quote/state';\nimport * as fromPolicy from '../../state/policy';\nimport * as fromPolicyActions from '../../state/policy/policy.actions';\nimport { lineGroup } from '../../containers/line.enum';\nimport { IRoutes } from '@sura-platform/web/core/models/question/routes.interface';\n\n@Component({\n  selector: 'sxf-zones',\n  templateUrl: 'zones.component.html',\n  styleUrls: ['zones.component.scss']\n})\nexport class ZonesComponent extends BaseComponent implements OnInit, OnDestroy {\n  cpForm = <FormGroup>{};\n  locationForm = <FormGroup>{};\n  showCPForm = true;\n\n  /**\n   * Array of provinces\n   *\n   * @type {Observable<IProvince[]>}\n   * @memberof ZonesComponent\n   */\n  provinces$: Observable<IProvince[]> = new Observable();\n\n  /**\n   * Array of locations\n   *\n   * @type {Observable<ILocation[]>}\n   * @memberof ZonesComponent\n   */\n  locations$: Observable<ILocation[]> = new Observable();\n\n  /**\n   * Subscription for locations\n   *\n   * @type {Subscription}\n   * @memberof ZonesComponent\n   */\n  locationsSubscription: Subscription = new Subscription();\n\n  /**\n   * Subscription for home quote\n   *\n   * @type {Subscription}\n   * @memberof ZonesComponent\n   */\n  quoteHomeSubscription: Subscription = new Subscription();\n\n  /**\n   * Postal Code value to store\n   *\n   * @type {(number | null)}\n   * @memberof ZonesComponent\n   */\n  postalCode: number | null = null;\n\n  /**\n   * Province value to store\n   *\n   * @memberof ZonesComponent\n   */\n  province: string | null = null;\n\n  /**\n   * Array of provinces\n   *\n   * @type {IProvince[]}\n   * @memberof ZonesComponent\n   */\n  provinces: IProvince[] = [];\n\n  /**\n   * Location value to store\n   *\n   * @memberof ZonesComponent\n   */\n  location: string | null = null;\n\n  /**\n   * Array of locations\n   *\n   * @type {ILocation[]}\n   * @memberof ZonesComponent\n   */\n  locations: ILocation[] = [];\n\n  /**\n   * Current line\n   *\n   * @memberof ZonesComponent\n   */\n  currentLine: string | null = null;\n\n  /**\n   * Current house number\n   *\n   * @type {(number | null)}\n   * @memberof ZonesComponent\n   */\n  currentHouseNumber: number | null = null;\n\n  /**\n   * Current house\n   *\n   * @type {IHouse}\n   * @memberof ZonesComponent\n   */\n  currentHouse: IHouse = {} as IHouse;\n\n  /**\n   * Array of houses\n   *\n   * @type {IHouse[]}\n   * @memberof ZonesComponent\n   */\n  houses: IHouse[] = [];\n\n  /**\n   * Routes for Home\n   *\n   * @type {IRoutes[]}\n   * @memberof ZonesComponent\n   */\n  routes: IRoutes[] = [];\n\n  /**\n   * true go from Código Postal form, false go from Provincia Localidad form\n   *\n   * @memberof ZonesComponent\n   */\n  isPostalCode = true;\n\n  constructor(\n    private fb: FormBuilder,\n    private locationService: LocationService,\n    private provinceService: ProvinceService,\n    private flowRouteService: FlowRouteService,\n    private storeQuote: Store<fromQuote.State>,\n    private storePolicy: Store<fromPolicy.State>\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.storeQuote.select(fromQuote.getCurrentLine).subscribe((line) => {\n      this.currentLine = line;\n\n      if (this.currentLine === lineGroup.HOME) {\n        this.loadHomeData();\n      }\n\n      this.selectPostalCode();\n    });\n\n    this.provinces$ = this.provinceService\n      .getAllProvinces()\n      .pipe(tap((provinces: any) => (this.provinces = provinces)));\n\n    this.cpForm = this.fb.group({\n      postalCode: [\n        this.postalCode,\n        [Validators.pattern(/^(|\\d)+$/), Validators.maxLength(4)]\n      ]\n    });\n\n    if (this.postalCode) {\n      // Se marca cpForm como dirty\n      this.cpForm.markAsDirty();\n    }\n\n    this.locationForm = this.fb.group({\n      province: [this.province, Validators.required],\n      location: [this.location, Validators.required]\n    });\n\n    this.locationForm\n      .get('province')\n      ?.valueChanges.subscribe((province: string) => {\n        if (province) {\n          this.locationForm.get('location')?.enable();\n          this.locations$ = this.locationService\n            .getLocations(province)\n            .pipe(tap((locations: any) => (this.locations = locations)));\n        } else {\n          this.locationForm.get('location')?.disable();\n          this.locationForm.get('location')?.setValue('', {\n            onlySelf: true,\n            emitEvent: true\n          });\n        }\n        this.province = province;\n      });\n\n    this.locationForm\n      .get('location')\n      ?.valueChanges.subscribe((city: string) => {\n        this.location = city;\n      });\n\n    this.cpForm.get('postalCode')?.setValue(this.postalCode, {\n      onlySelf: true,\n      emitEvent: true\n    });\n    this.locationForm.get('province')?.setValue(this.province, {\n      onlySelf: true,\n      emitEvent: true\n    });\n    this.locationForm.get('location')?.setValue(this.location, {\n      onlySelf: true,\n      emitEvent: true\n    });\n  }\n\n  searchByPostalCode(cp: number) {\n    if (cp) {\n      this.locationsSubscription = this.locationService\n        .getLocationAndProvince(cp)\n        .subscribe((locations: any) => {\n          if (locations && locations.length > 0) {\n            // Por definición de US 7943\n            // Cuando haya 2 localidades asociadas al mismo cp se tomara por default el primero que aparezca.\n            // En instancia de emision se definira como se resuelve esta situacion\n            this.province = locations[0].state.code;\n            this.locationForm.get('province')?.setValue(this.province, {\n              onlySelf: true,\n              emitEvent: true\n            });\n            this.location = locations[0].city;\n            this.locationForm.get('location')?.setValue(this.location, {\n              onlySelf: true,\n              emitEvent: true\n            });\n            this.postalCode = cp;\n\n            this.continue();\n          } else {\n            this.cpForm.get('postalCode')?.setErrors({ pattern: true });\n            return;\n          }\n        });\n    } else {\n      this.cpForm.get('postalCode')?.setErrors({ pattern: true });\n      return;\n    }\n  }\n\n  searchByProvinceLocation() {\n    this.postalCode =\n      this.locations?.find((v: any) => v.city === this.location)?.postalcode ||\n      null;\n    this.continue();\n  }\n\n  selectLocation() {\n    this.routes.forEach((element) => {\n      if (element.path === 'home/' + this.currentHouse.id + '/zones') {\n        element.question = '¿Cuál es la ubicación de la vivienda?';\n        element.value = this.postalCode ? ' ' : '';\n      }\n    });\n    this.showCPForm = false;\n    this.isPostalCode = false;\n    this.locationForm.get('province')?.setValue('', {\n      onlySelf: true,\n      emitEvent: true\n    });\n  }\n\n  selectPostalCode() {\n    this.routes.forEach((element) => {\n      if (element.path === 'home/' + this.currentHouse.id + '/zones') {\n        element.question = '¿Cuál es el código postal de la vivienda?';\n        element.value = this.postalCode ? this.postalCode.toString() : '';\n      }\n    });\n    this.showCPForm = true;\n    this.isPostalCode = true;\n  }\n\n  continue() {\n    if (this.currentLine === lineGroup.HOME) {\n      this.continueHome();\n    }\n  }\n\n  loadHomeData() {\n    this.quoteHomeSubscription = combineLatest([\n      this.storePolicy.select(fromQuote.getQuoteHomeData),\n      this.storeQuote.select(fromPolicy.getHouses)\n    ]).subscribe(([homeData, houses]) => {\n      this.currentHouseNumber = homeData.activeHome;\n      this.houses = houses;\n      this.currentHouse = this.houses.find(\n        (h) => h.id === this.currentHouseNumber\n      ) as IHouse;\n      this.routes = <IRoutes[]>homeData.routes;\n      this.postalCode = this.currentHouse.zone.postalcode;\n      this.province = this.currentHouse.zone.state;\n      this.location = this.currentHouse.zone.city;\n    });\n  }\n\n  storeHomeData() {\n    const house = this.houses.find(\n      (h) => h.id === this.currentHouseNumber\n    ) as IHouse;\n\n    house.zone.city = this.location as string;\n    house.zone.state = this.province as string;\n    house.zone.postalcode = this.postalCode as number;\n\n    this.storePolicy.dispatch(\n      new fromPolicyActions.UpdateHouseAction(this.houses)\n    );\n  }\n\n  continueHome() {\n    const provinceDescription = this.provinces?.find(\n      (u: any) => u.code === this.province\n    )?.description;\n\n    this.storeHomeData();\n\n    let value = '';\n\n    if (this.isPostalCode) {\n      value = `${this.postalCode}`;\n    } else {\n      value = `${provinceDescription}, ${this.location}`;\n    }\n\n    this.flowRouteService.enableHomeRoute(\n      this.currentHouseNumber as number,\n      this.routes,\n      'useconstruction',\n      'zones',\n      value\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.locationsSubscription) {\n      this.locationsSubscription.unsubscribe();\n    }\n\n    if (this.quoteHomeSubscription) {\n      this.quoteHomeSubscription.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { QuoteComponent } from './containers/quote.component';\n\nimport { QuestionsComponent } from './components/questions/questions.component';\nimport { PatentComponent } from '../motor/components/patent/patent.component';\nimport { YearComponent } from '../motor/components/year/year.component';\nimport { BrandComponent } from '../motor/components/brand/brand.component';\nimport { ModelComponent } from '../motor/components/model/model.component';\nimport { VersionComponent } from '../motor/components/version/version.component';\nimport { LocationComponent } from '../motor/components/location/location.component';\nimport { UsedestinationComponent } from '../motor/components/usedestination/usedestination.component';\nimport { SumComponent } from '../motor/components/sum/sum.component';\n// import { QuestionsComponent } from './components/questions/questions.component';\n// import { PatentComponent, YearComponent, BrandComponent, ModelComponent, VersionComponent, LocationComponent, UsedestinationComponent, SumComponent, MotorComponent } from '..';\nimport { AgeComponent } from '../motor/components/age/age.component';\n\nimport JSON_CONF from '../motor/motor.config.json';\nimport { IMotorConfiguration } from '../motor/motor.config';\n//import { HomeBuildingComponent } from '../home/components/building/building.component';\nimport { lineGroup } from './../../../quoting/containers/line.enum';\nimport { HomeUseConstructionComponent } from '../home/components/useconstruction/useconstruction.component';\nimport { M2Component } from '../home/components/m2/m2.component';\nimport { ZonesComponent } from '../zones/zones.component';\nimport { ProducersComponent } from '../producers/producers.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuoteComponent,\n    children: [\n      {\n        path: 'questions',\n        component: QuestionsComponent,\n        children: [\n          {\n            path: 'producers',\n            component: ProducersComponent,\n            data: {\n              question: '¿Qué código de productor querés usar?',\n              show: true,\n              visible: true,\n              disabled: false,\n              car: '',\n              value: '',\n              shortName: 'Código de productor',\n              config: <IMotorConfiguration>JSON_CONF,\n              line: lineGroup.MOTOR\n            }\n          },\n          {\n            path: 'motor/:id/patent',\n            component: PatentComponent,\n            data: {\n              question: '¿Sabes la patente del vehiculo?',\n              show: true,\n              visible: true,\n              disabled: true,\n              car: '',\n              value: '',\n              shortName: 'Patente',\n              config: <IMotorConfiguration>JSON_CONF,\n              line: lineGroup.MOTOR\n            }\n          },\n          {\n            path: 'motor/:id/year',\n            component: YearComponent,\n            data: {\n              question: '¿Cuál es el año del vehiculo?',\n              show: true,\n              visible: true,\n              disabled: true,\n              car: '',\n              value: '',\n              shortName: 'Año',\n              line: lineGroup.MOTOR\n            }\n          },\n          {\n            path: 'motor/:id/brand',\n            component: BrandComponent,\n            data: {\n              question: '¿Cual es la marca?',\n              show: true,\n              visible: true,\n              disabled: true,\n              car: '',\n              value: '',\n              shortName: 'Marca',\n              line: lineGroup.MOTOR\n            }\n          },\n          {\n            path: 'motor/:id/model',\n            component: ModelComponent,\n            data: {\n              question: '¿Cual es el modelo?',\n              show: true,\n              visible: true,\n              disabled: true,\n              car: '',\n              value: '',\n              shortName: 'Modelo',\n              line: lineGroup.MOTOR\n            }\n          },\n          {\n            path: 'motor/:id/version',\n            component: VersionComponent,\n            data: {\n              question: '¿Cual es la version?',\n              show: true,\n              visible: true,\n              disabled: true,\n              car: '',\n              value: '',\n              shortName: 'Version',\n              line: lineGroup.MOTOR\n            }\n          },\n          {\n            path: 'motor/:id/location',\n            component: LocationComponent,\n            data: {\n              question: '¿Cual es la ubicacion del vehiculo?',\n              show: true,\n              visible: true,\n              disabled: true,\n              car: '',\n              value: '',\n              shortName: 'Ubicacion',\n              line: lineGroup.MOTOR\n            }\n          },\n          {\n            path: 'motor/:id/use',\n            component: UsedestinationComponent,\n            data: {\n              question: '¿Cuál es el uso y destino?',\n              show: true,\n              visible: true,\n              disabled: true,\n              car: '',\n              value: '',\n              shortName: 'Uso',\n              line: lineGroup.MOTOR\n            }\n          },\n          {\n            path: 'motor/:id/sum',\n            component: SumComponent,\n            data: {\n              question: '¿Estas de acuerdo con la suma asegurada?',\n              show: true,\n              visible: true,\n              disabled: true,\n              car: '',\n              value: '',\n              shortName: 'Suma Asegurada',\n              line: lineGroup.MOTOR\n            }\n          },\n          {\n            path: 'motor/:id/age',\n            component: AgeComponent,\n            data: {\n              question: '¿Cúal es la edad del conductor?',\n              show: true,\n              visible: false,\n              disabled: true,\n              car: '',\n              value: '',\n              shortName: 'Edad del conductor',\n              line: lineGroup.MOTOR\n            }\n          },\n          {\n            path: 'home/:id/zones',\n            component: ZonesComponent,\n            data: {\n              question: '¿Cuál es es el código postal de la vivienda?',\n              show: true,\n              visible: true,\n              disabled: true,\n              value: '',\n              shortName: 'Ubicación',\n              line: lineGroup.HOME\n            }\n          },\n          {\n            path: 'home/:id/useconstruction',\n            component: HomeUseConstructionComponent,\n            data: {\n              question: '¿Cuáles son los detalles de la vivienda?',\n              show: true,\n              visible: true,\n              disabled: true,\n              value: '',\n              shortName: 'Detalles de la vivienda',\n              line: lineGroup.HOME\n            }\n          },\n          {\n            path: 'home/:id/m2',\n            component: M2Component,\n            data: {\n              question: '¿Cuántos m2 tiene la vivienda?',\n              show: true,\n              visible: true,\n              disabled: true,\n              value: '',\n              shortName: 'Metros de vivienda',\n              line: lineGroup.HOME\n            }\n          }\n        ]\n      }\n    ]\n  }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class QuoteRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { LottieModule } from 'ngx-lottie';\n\nimport { EffectsModule } from '@ngrx/effects';\nimport { PolicyEffects } from '../../state/policy/policy.effects';\nimport { QuoteEffects } from './state/quote.effects';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { QuoteRoutingModule } from './quote-routing.routing';\nimport { QUOTE_COMPONENTS } from './components';\nimport { AutoFocusDirective } from '../../directives/auto-focus.directive';\n\nexport function playerFactory() {\n  return import('lottie-web');\n}\n\n@NgModule({\n  imports: [\n    QuoteRoutingModule,\n    SharedModule,\n    EffectsModule.forFeature([PolicyEffects, QuoteEffects]),\n    LottieModule.forRoot({ player: playerFactory })\n  ],\n  declarations: [...QUOTE_COMPONENTS, AutoFocusDirective],\n  exports: [...QUOTE_COMPONENTS],\n  providers: []\n})\nexport class QuoteModule {}\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  var index = -1;\n  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n"]}