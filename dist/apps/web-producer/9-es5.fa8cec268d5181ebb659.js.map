{"version":3,"sources":["webpack:///src/app/features/queries/queries.component.ts","webpack:///src/app/features/queries/queries.component.html","webpack:///src/app/features/queries/components/quotes/quotes.component.html","webpack:///src/app/features/queries/components/quotes/quotes.component.ts","webpack:///src/app/features/queries/queries.module.ts","webpack:///src/app/features/queries/queries-routing.module.ts","webpack:///home/diego/SURA/Portales/node_modules/moment/locale/es.js"],"names":["QueriesComponent","QuotesComponent","QueriesModule","QueriesRoutingModule","value","CurrencyPipe","date","this","serverDate","localStorage","getItem","moment","from","subtract","quotesService","storeEmission","storeProducer","storeQuote","storePolicy","utilService","notifyService","router","route","documentationService","logService","lottieConfig","path","autoplay","loop","suraLoaderConfig","inputLoaderConfig","animation","lineEnumGroup","ACTIVE","PENDING","REJECTED","COTIZACIONES","SOLICITUDES","loadingIndicator","loadingDetails","quotesRequest","uwRequest","uwResponse","rows","statusTranslate","withoutUWissues","approved","pendingApproval","rejected","rActive","rPending","rRejected","quotesStatus","name","code","qty","type","FormControl","typeOptions","description","quoteStatusActive","temp","columns","prop","sortable","pipe","ColumnMode","codeProducer","notificationSubscription","Subscription","isQuoteDownload","isGoToEmision","isQuoteDownloadOk","env","environment","defaultView","snapshot","paramMap","get","typeValue","dispatch","COTIZACIONPENDIENTE","SOLOCITUDPENDIENTE","valueChanges","subscribe","getQuotes","setValue","emitEvent","notification$","selectedQuote","loading","unsubscribe","statusCode","getCurrentServerDate","data","sDate","datetime","Date","splice","_getQuotes","active","pending","policytype","uwstatus","datesince","toISOString","dateuntil","productcode","producer","client","primaryofficialid","firstname","lastname","companyname","switchMap","quotes","of","filter","quote","borrador","job","status","solicitud","policynumber","i","map","forEach","hasOwnProperty","inspection","push","includes","length","setTimeout","handleShadowInDatatable","feedback","event","val","target","toLowerCase","d","displayname","indexOf","row","expand","table","rowDetail","collapseAllRows","getUW","number","toggleExpandRow","$event","uwJob","getQuotesUnderwriters","profile","policy","navigateByUrl","line","MOTOR","HOME","e","playSegments","getVehicleQuote","linkSource","streambase64","downloadLink","document","createElement","fileName","href","download","click","getVehicleProducerQuote","datatable_footer","querySelector","datatable_body","datatable_header","scrollTop","classList","remove","add","clientHeight","scrollHeight","goToQuote","updateFilter","onContactUsClick","routes","component","children","forChild","QuotesService","monthsShortDot","split","monthsShort","monthsParse","monthsRegex","defineLocale","months","m","format","test","month","monthsShortRegex","monthsStrictRegex","monthsShortStrictRegex","longMonthsParse","shortMonthsParse","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","hours","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","mm","h","hh","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","week","dow","doy","invalidDate"],"mappings":"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","file":"x","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'sxf-queries',\n  templateUrl: './queries.component.html',\n  styleUrls: ['./queries.component.scss']\n})\nexport class QueriesComponent implements OnInit {\n  @ViewChild('content') content: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n}\n","<router-outlet></router-outlet>","<div class=\"quotes-container\">\n  <div class=\"top-container\">\n    <div class=\"title\">Cotizaciones</div>\n    <!-- <div class=\"col-lg-2\">\n    <sxf-select-producer\n      (selected)=\"getSelectedProducer($event)\"\n      (currentProducer)=\"setCurrentProducer($event)\"\n      (currentProducerProfile)=\"setCurrentProducerProfile($event)\"\n    ></sxf-select-producer>\n  </div> -->\n  </div>\n\n  <div class=\"buttons-grid\">\n    <div class=\"btn-coverage\">\n      <button\n        placement=\"bottom\"\n        ngbTooltip=\"Cotizá uno o más vehículos\"\n        class=\"btn btn-primary btn-lg btn-block\"\n        (click)=\"goToQuote(lineEnumGroup.MOTOR)\"\n      >\n        <div class=\"icon\">\n          <img\n            src=\"/assets/icons/GENERAL_WHEEL.svg\"\n            alt=\"ok\"\n            class=\"icon-plus\"\n          />\n        </div>\n        <div class=\"title-container\">\n          <h2>Vehículos</h2>\n          <p>Nueva Cotización</p>\n        </div>\n      </button>\n    </div>\n    <div\n      *ngIf=\"\n        env === 'localhost' ||\n        env === 'development' ||\n        env === 'qa' ||\n        env === 'uat'\n      \"\n      class=\"btn-coverage\"\n    >\n      <button\n        class=\"btn btn-primary btn-lg btn-block\"\n        (click)=\"goToQuote(lineEnumGroup.HOME)\"\n      >\n        <div class=\"icon\">\n          <img\n            src=\"/assets/icons/GENERAL_HOME_NEW.svg\"\n            alt=\"ok\"\n            class=\"icon-plus\"\n          />\n        </div>\n        <div class=\"title-container\">\n          <h2>Hogar</h2>\n          <p>Nueva Cotización</p>\n        </div>\n      </button>\n    </div>\n  </div>\n\n  <hr class=\"line-color\" />\n\n  <div class=\"combo-and-search-grid\">\n    <div id=\"div-select\">\n      <sxf-select\n        [items]=\"typeOptions\"\n        [formControl]=\"type\"\n        bindLabel=\"description\"\n        bindValue=\"code\"\n        [multiple]=\"false\"\n        class=\"custom\"\n        [searchable]=\"true\"\n        placeholder=\"\"\n        [dropdownPosition]=\"'bottom'\"\n      ></sxf-select>\n    </div>\n    <div class=\"search-container\">\n      <sxf-textbox-search\n        (keyup)=\"updateFilter($event)\"\n        placeholder=\"Buscá por Nombre, DNI\"\n      ></sxf-textbox-search>\n    </div>\n    <!-- Se usa un arreglo de botones para simular los tabs ya que ngx-datatable funciona de manera inesperada con los tab.\n           En nuestro caso el error se presenta renderizando las filas al cambiar tab, las filas desaparecen o la tabla cambia a un\n           tamaño estrecho. Por otro lado, el desplegable de detalles en cada fila en el segundo tab no funciona, trabaja correctamente\n           en el primer tab por ejemplo, pero en el segundo y tercer tab se pierde la funcionalidad.\n\n           Una solución que no nos sirvió https://stackoverflow.com/questions/52945429/ngx-datatable-rows-are-not-rendered-properly-in-tab-set\n           Caso reportado: https://github.com/swimlane/ngx-datatable/issues/417\n           Otro caso: https://github.com/swimlane/ngx-datatable/issues/1325\n\n      -->\n    <div\n      class=\"button-tab btn-group btn-group-sm\"\n      role=\"group\"\n      aria-label=\"Basic\"\n    >\n      <button\n        [ngClass]=\"\n          quoteStatusActive === 1 ? 'btn btn-primary' : 'btn btn-secondary'\n        \"\n        type=\"button\"\n        autofocus\n        (click)=\"getQuotes(1)\"\n      >\n        {{ rActive.length }} Activas\n      </button>\n      <button\n        [ngClass]=\"\n          quoteStatusActive === 2 ? 'btn btn-primary' : 'btn btn-secondary'\n        \"\n        type=\"button\"\n        (click)=\"getQuotes(2)\"\n      >\n        {{ rPending.length }} Pendientes\n      </button>\n      <button\n        [ngClass]=\"\n          quoteStatusActive === 3 ? 'btn btn-primary' : 'btn btn-secondary'\n        \"\n        type=\"button\"\n        (click)=\"getQuotes(3)\"\n      >\n        {{ rRejected.length }} Rechazadas\n      </button>\n    </div>\n  </div>\n\n  <div class=\"table-container\" *ngIf=\"rows.length !== 0 || loadingIndicator\">\n    <ngx-datatable\n      #quotesTable\n      class=\"material striped expandable\"\n      [rows]=\"rows\"\n      [columnMode]=\"ColumnMode.force\"\n      [headerHeight]=\"64\"\n      [footerHeight]=\"82\"\n      [rowHeight]=\"64\"\n      [loadingIndicator]=\"loadingIndicator\"\n      [sorts]=\"[{ prop: 'updatetime', dir: 'desc' }]\"\n      [scrollbarV]=\"true\"\n      [scrollbarH]=\"false\"\n      [virtualization]=\"true\"\n      (scroll)=\"onDatatableScroll()\"\n    >\n      <!-- [limit]=\"10\" -->\n      <ngx-datatable-row-detail [rowHeight]=\"150\" #detailRow>\n        <ng-template\n          let-row=\"row\"\n          let-expanded=\"expanded\"\n          ngx-datatable-row-detail-template\n        >\n          <div *ngIf=\"!loadingDetails; else loadingDetailsIcon\">\n            <table\n              class=\"details-table\"\n              id=\"details-table\"\n              style=\"max-width: 100%; min-width: 100%; width: 100%;\"\n            >\n              <tr>\n                <th style=\"width: 10%;\"></th>\n                <th style=\"width: 11%;\">Derivación</th>\n                <th style=\"width: 57%;\">Descripción</th>\n                <th style=\"width: 11%;\">Finalización</th>\n                <th style=\"width: 20%;\">Usuario a cargo</th>\n              </tr>\n              <tr *ngFor=\"let uw of uwResponse\">\n                <td class=\"text-center\">\n                  <img\n                    src=\"/assets/icons/GENERAL_ROWARROW.svg\"\n                    alt=\"general_rowarrow\"\n                  />\n                </td>\n                <td>\n                  {{ uw?.escalationdate | date: 'dd.MM.yyy' }}\n                </td>\n                <td\n                  class=\"text-wrap\"\n                  style=\"padding-right: 5%; font-size: 14px;\"\n                >\n                  {{ uw?.description }}\n                </td>\n                <td>{{ uw?.targetdate | date: 'dd.MM.yyy' }}</td>\n                <td>\n                  {{ uw?.assigneduser?.firstname }}\n                  {{ uw?.assigneduser?.lastname }}\n                </td>\n              </tr>\n            </table>\n          </div>\n          <ng-template #loadingDetailsIcon>\n            <div class=\"row\">\n              <div class=\"col-12 text-center\">\n                <ng-lottie\n                  [options]=\"suraLoaderConfig\"\n                  width=\"8.75rem\"\n                  height=\"6.25rem\"\n                ></ng-lottie>\n              </div>\n            </div>\n          </ng-template>\n        </ng-template>\n      </ngx-datatable-row-detail>\n\n      <ngx-datatable-column\n        name=\"Ramo\"\n        [sortable]=\"false\"\n        headerClass=\"text-center\"\n        cellClass=\"text-center ramo\"\n      >\n        <ng-template\n          let-row=\"row\"\n          let-value=\"value\"\n          ngx-datatable-cell-template\n        >\n          <div class=\"icon-car\"></div>\n        </ng-template>\n      </ngx-datatable-column>\n      <ngx-datatable-column\n        *ngFor=\"let col of columns.slice(0, 2)\"\n        [name]=\"col.name\"\n        [prop]=\"col.prop\"\n        [sortable]=\"col.sortable\"\n        [pipe]=\"col.pipe\"\n      ></ngx-datatable-column>\n      <ngx-datatable-column\n        [name]=\"'Estado'\"\n        [prop]=\"'uwstatus'\"\n        [sortable]=\"'false'\"\n      >\n        <ng-template\n          let-row=\"row\"\n          let-value=\"value\"\n          ngx-datatable-cell-template\n        >\n          <span\n            *ngIf=\"\n              quoteStatusActive === PENDING && row.inspection.pending === true;\n              else status\n            \"\n          >\n            Inspección\n          </span>\n          <ng-template #status>\n            <span>{{ statusTranslate[value] }}</span>\n          </ng-template>\n        </ng-template>\n      </ngx-datatable-column>\n      <ngx-datatable-column\n        *ngFor=\"let col of columns.slice(2, columns.length)\"\n        [name]=\"col.name\"\n        [prop]=\"col.prop\"\n        [sortable]=\"col.sortable\"\n        [pipe]=\"col.pipe\"\n      ></ngx-datatable-column>\n      <ngx-datatable-column [sortable]=\"false\">\n        <ng-template\n          let-row=\"row\"\n          let-value=\"value\"\n          let-expanded=\"expanded\"\n          ngx-datatable-cell-template\n        >\n          <span\n            class=\"btn-icon mr-3\"\n            *ngIf=\"quoteStatusActive == ACTIVE && type.value === 'cotizaciones'\"\n          >\n            <button\n              class=\"btn btn-secundary\"\n              (click)=\"downloadQuote(row)\"\n              title=\"Descargar documento de cotización\"\n              [disabled]=\"isQuoteDownload || row?.loading || isGoToEmision\"\n            >\n              <sxf-icon\n                *ngIf=\"\n                  (!isQuoteDownload && !isQuoteDownloadOk) || !row?.loading\n                \"\n                class=\"icon-green\"\n                type=\"download\"\n              ></sxf-icon>\n              <img\n                *ngIf=\"isQuoteDownloadOk && row?.loading\"\n                src=\"/assets/icons/GENERAL_OK_SM.svg\"\n                alt=\"ok\"\n                width=\"26px\"\n                height=\"26px\"\n              />\n              <ng-lottie\n                [hidden]=\"!isQuoteDownload || !row?.loading\"\n                width=\"26px\"\n                height=\"26px\"\n                [options]=\"inputLoaderConfig\"\n              ></ng-lottie>\n            </button>\n          </span>\n          <span *ngIf=\"quoteStatusActive == ACTIVE\">\n            <button\n              (click)=\"goToEmission(row)\"\n              class=\"btn btn-primary btn-sm\"\n              [disabled]=\"\n                isGoToEmision ||\n                row?.loading ||\n                selectedQuote ||\n                isQuoteDownload ||\n                isQuoteDownloadOk\n              \"\n            >\n              <span *ngIf=\"!isGoToEmision || !row?.loading\">\n                Continuar\n              </span>\n              <span *ngIf=\"isGoToEmision && row?.loading\">\n                Cargando\n              </span>\n              <ng-lottie\n                [hidden]=\"!isGoToEmision || !row?.loading\"\n                [options]=\"lottieConfig\"\n                width=\"20px\"\n                height=\"20px\"\n                (animationCreated)=\"animationHandler($event)\"\n              ></ng-lottie>\n            </button>\n          </span>\n          <div *ngIf=\"quoteStatusActive == PENDING\">\n            <a\n              href=\"javascript:void(0)\"\n              (click)=\"toggleExpandRow(row, expanded)\"\n            >\n              <span *ngIf=\"expanded\">Ocultar</span>\n              <span *ngIf=\"!expanded\">Ver detalle</span>\n            </a>\n          </div>\n          <div *ngIf=\"quoteStatusActive == REJECTED\">\n            <a\n              href=\"javascript:void(0)\"\n              (click)=\"toggleExpandRow(row, expanded)\"\n            >\n              <span *ngIf=\"expanded\">Ocultar</span>\n              <span *ngIf=\"!expanded\">Ver detalle</span>\n            </a>\n          </div>\n        </ng-template>\n      </ngx-datatable-column>\n\n      <ngx-datatable-footer *ngIf=\"rows?.length > 0 && rows?.length <= 10\">\n        <ng-template ngx-datatable-footer-template>\n          <div class=\"datatable-pager\">\n            <ul class=\"pager\">\n              <li class=\"disabled\">\n                <a href=\"\" role=\"button\">\n                  <i class=\"datatable-icon-prev\"></i>\n                </a>\n              </li>\n              <li class=\"disabled\">\n                <a href=\"\" role=\"button\">\n                  <i class=\"datatable-icon-left\"></i>\n                </a>\n              </li>\n              <li role=\"button\" class=\"pages active\">\n                <a>1</a>\n              </li>\n              <li class=\"disabled\">\n                <a href=\"\" role=\"button\">\n                  <i class=\"datatable-icon-right\"></i>\n                </a>\n              </li>\n              <li class=\"disabled\">\n                <a href=\"\" role=\"button\">\n                  <i class=\"datatable-icon-skip\"></i>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </ng-template>\n      </ngx-datatable-footer>\n    </ngx-datatable>\n  </div>\n\n  <div *ngIf=\"rows.length === 0 && !loadingIndicator\">\n    <div\n      *ngIf=\"quoteStatusActive == ACTIVE && type.value === 'cotizaciones'\"\n      class=\"text-center m-img\"\n    >\n      <img src=\"/assets/icons/GENERAL_TRAY.svg\" alt=\"ok\" />\n      <div class=\"text-img\">\n        <span>No tenés ninguna cotización guardada o pendiente</span>\n      </div>\n    </div>\n    <div\n      *ngIf=\"\n        quoteStatusActive !== ACTIVE ||\n        (quoteStatusActive === ACTIVE && type.value === 'solicitudes')\n      \"\n      class=\"text-center m-img\"\n    >\n      <img src=\"/assets/icons/GENERAL_OK_HAND.svg\" alt=\"ok\" />\n    </div>\n    <div\n      *ngIf=\"quoteStatusActive === PENDING && type.value === 'cotizaciones'\"\n      class=\"text-center\"\n    >\n      <div class=\"text-img\">\n        <span>No tenés ninguna cotización pendiente de aprobación</span>\n      </div>\n    </div>\n    <div\n      *ngIf=\"quoteStatusActive === REJECTED && type.value === 'cotizaciones'\"\n      class=\"text-center\"\n    >\n      <div class=\"text-img\">\n        <span>\n          No tenés ninguna cotización rechazada por la compañía\n        </span>\n      </div>\n    </div>\n    <div\n      *ngIf=\"quoteStatusActive === ACTIVE && type.value === 'solicitudes'\"\n      class=\"text-center\"\n    >\n      <div class=\"text-img\">\n        <span>No tenés ninguna solicitud pendiente de emisión</span>\n      </div>\n    </div>\n    <div\n      *ngIf=\"quoteStatusActive === PENDING && type.value === 'solicitudes'\"\n      class=\"text-center\"\n    >\n      <div class=\"text-img\">\n        <span>No tenés ninguna solicitud pendiente de aprobación</span>\n      </div>\n    </div>\n    <div\n      *ngIf=\"quoteStatusActive === REJECTED && type.value === 'solicitudes'\"\n      class=\"text-center\"\n    >\n      <div class=\"text-img\">\n        <span>\n          No tenés ninguna solicitud rechazada por la compañía\n        </span>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div id=\"container-floating\">\n  <button type=\"button\" (click)=\"onContactUsClick()\" class=\"btn btn-primary\">\n    <img\n      style=\"\n        filter: invert(100%) sepia(100%) saturate(0%) hue-rotate(305deg)\n          brightness(103%) contrast(103%);\n      \"\n      class=\"icon-plus\"\n      src=\"/assets/icons/GENERAL_INFO.svg\"\n      width=\"14\"\n      height=\"14\"\n      alt=\"general_info\"\n    />\n    ¿Alguna sugerencia?\n  </button>\n</div>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  PipeTransform,\n  OnDestroy\n} from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { of, Subscription } from 'rxjs';\nimport { map, switchMap, filter } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport * as moment from 'moment';\nimport 'moment/locale/es';\n\nimport {\n  IQuotesRequest,\n  IQuotesResponse,\n  IQuotesUnderwritersRequest,\n  IQuotesUnderwritersResponse,\n  QuotesService,\n  UtilService,\n  DocumentationService\n} from '@sura-platform/features';\nimport { NotificationService } from '@sura-platform/core/services/notification.service';\nimport { columnMode } from '@sura-platform/web';\nimport * as fromEmission from '../../../quoting/components/emission/state';\nimport * as fromEmissionActions from '../../../quoting/components/emission/state/emission.actions';\nimport { Store } from '@ngrx/store';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as fromProducer from '../../../producer/state';\nimport * as fromProducerActions from '../../../producer/state/producer.actions';\nimport * as fromPolicy from '../../../quoting/state/policy';\nimport * as fromPolicyActions from '../../../quoting/state/policy/policy.actions';\nimport * as fromQuote from '../../../quoting/components/quote/state';\nimport * as fromQuoteActions from '../../../quoting/components/quote/state/quote.actions';\nimport { AnimationOptions } from 'ngx-lottie';\nimport { AnimationItem } from 'lottie-web';\nimport { CurrencyPipe, LogService } from '@sura-platform/core';\nimport { viewsQuotes } from './quotes.enum';\nimport { lineGroup } from './../../../quoting/containers/line.enum';\nimport { environment } from '@sura-platform/apps/web-producer/src/environments/environment';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\n\nclass DateFormat extends DatePipe {\n  public transform(value: any): any {\n    return super.transform(value, 'dd.MM.yyyy');\n  }\n}\n\nclass CurrencyFormat extends CurrencyPipe {\n  public transform(value: any): string {\n    return super.transform(value, '$', 0, '.');\n  }\n}\n\nclass DaysAgo implements PipeTransform {\n  serverDate: any;\n  constructor(private date: any) {\n    this.serverDate = localStorage.getItem('date');\n    if (this.serverDate === null) {\n      this.serverDate = this.date;\n    }\n  }\n  transform(date: string): string {\n    moment.locale('es');\n    return moment(date).from(\n      moment(this.serverDate).subtract(15, 'days'),\n      true\n    );\n  }\n}\n\n@Component({\n  selector: 'sxf-queries-quotes',\n  templateUrl: './quotes.component.html',\n  styleUrls: ['./quotes.component.scss']\n})\nexport class QuotesComponent implements OnInit, OnDestroy {\n  @ViewChild('quotesTable', { static: false }) table?: DatatableComponent;\n\n  datatable_header?: HTMLDivElement;\n\n  datatable_body?: HTMLDivElement;\n\n  datatable_footer?: HTMLDivElement;\n\n  lottieConfig: AnimationOptions = {\n    path: '/assets/loadings/data-validation-loader.json',\n    autoplay: true,\n    loop: true\n  };\n\n  suraLoaderConfig: AnimationOptions = {\n    path: '/assets/loadings/sura-loader.json'\n  };\n\n  inputLoaderConfig: AnimationOptions = {\n    path: '/assets/loadings/inside-inputs-loader.json'\n  };\n\n  animation: AnimationItem = {} as AnimationItem;\n\n  lineEnumGroup = lineGroup;\n  ACTIVE = 1;\n  PENDING = 2;\n  REJECTED = 3;\n  COTIZACIONES = 'cotizaciones';\n  SOLICITUDES = 'solicitudes';\n  loadingIndicator = false;\n  loadingDetails = false;\n  selectedQuote: any;\n  quotesRequest: IQuotesRequest = {} as IQuotesRequest;\n  uwRequest: IQuotesUnderwritersRequest = {} as IQuotesUnderwritersRequest;\n  uwResponse: IQuotesUnderwritersResponse[] = [];\n  rows: IQuotesResponse[] = [];\n  statusTranslate = {\n    withoutUWissues: 'Guardada',\n    approved: 'Aprobada',\n    pendingApproval: 'Pendiente',\n    rejected: 'Rechazada'\n  };\n\n  rActive: any[] = [];\n  rPending: any[] = [];\n  rRejected: any[] = [];\n\n  quotesStatus = [\n    {\n      name: 'Activas',\n      code: this.ACTIVE,\n      qty: 0\n    },\n    {\n      name: 'Pendientes',\n      code: this.PENDING,\n      qty: 0\n    },\n    {\n      name: 'Rechazadas',\n      code: this.REJECTED,\n      qty: 0\n    }\n  ];\n\n  type: FormControl = new FormControl();\n  typeOptions = [\n    {\n      code: this.COTIZACIONES,\n      description: 'Cotizaciones'\n    },\n    {\n      code: this.SOLICITUDES,\n      description: 'Solicitudes'\n    }\n  ];\n\n  // Quotes `Activas` by default\n  quoteStatusActive: any = this.ACTIVE;\n\n  temp: any[] = [];\n\n  columns = [\n    {\n      name: 'Fecha',\n      prop: 'updatetime',\n      sortable: true,\n      // TODO: LA: Provisional mientras se soluciona tomar el serverDate desde el storage\n      // pipe: new DateFormat('en-US')\n      pipe: null\n    },\n    {\n      name: 'Vto',\n      prop: 'updatetime',\n      sortable: true,\n      // TODO: LA: Provisional mientras se soluciona tomar el serverDate desde el storage\n      // pipe: new DaysAgo(sDate)\n      pipe: null\n    },\n    { name: 'Nombre', sortable: false, prop: 'client.displayname' },\n    { name: 'DNI', sortable: false, prop: 'client.primaryofficialid.value' },\n    { name: 'N° Transaction', sortable: false, prop: 'job.number' },\n    { name: 'Cod Productor', sortable: false, prop: 'producer.code' },\n    // { name: 'Productor', sortable: false, prop: 'producer.description' },\n    {\n      name: 'Premio Total',\n      sortable: false,\n      prop: 'costs.total',\n      pipe: new CurrencyFormat()\n    }\n  ];\n\n  ColumnMode = columnMode;\n\n  // Producer seleted from sxf-select\n  codeProducer = '';\n  quotesResponse: any;\n\n  /**\n   * Subscription to notification service\n   *\n   * @type {Subscription}\n   * @memberof QuotesComponent\n   */\n  notificationSubscription: Subscription = new Subscription();\n\n  /**\n   * Indicates if the quote is being downloaded\n   *\n   * @memberof QuotesComponent\n   */\n  isQuoteDownload = false;\n\n  /**\n   * Indicates if continue to emision is active\n   *\n   * @memberof QuotesComponent\n   */\n  isGoToEmision = false;\n\n  /**\n   * Indicates if the quote donwload ok\n   *\n   * @memberof QuotesComponent\n   */\n  isQuoteDownloadOk = false;\n\n  // TODO: LA solo para habilitar botón de Hogar mientras\n  // no esté preparado para producción\n  env = environment.env;\n\n  constructor(\n    private quotesService: QuotesService,\n    private storeEmission: Store<fromEmission.State>,\n    private storeProducer: Store<fromProducer.State>,\n    private storeQuote: Store<fromQuote.State>,\n    private storePolicy: Store<fromPolicy.State>,\n    private utilService: UtilService,\n    private notifyService: NotificationService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private documentationService: DocumentationService,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    const defaultView = this.route.snapshot.paramMap.get('view');\n    let typeValue = this.COTIZACIONES; // Se establece por defecto cotizaciones\n\n    this.storeQuote.dispatch(new fromQuoteActions.ResetQuoteAction());\n    this.storePolicy.dispatch(new fromPolicyActions.ResetPolicyAction());\n    this.storeEmission.dispatch(new fromEmissionActions.ResetEmissionAction());\n    this.storeProducer.dispatch(new fromProducerActions.ResetProducerAction());\n\n    if (\n      defaultView !== null &&\n      +defaultView === viewsQuotes.COTIZACIONPENDIENTE\n    ) {\n      typeValue = this.COTIZACIONES;\n      this.quoteStatusActive = this.PENDING;\n    } else if (\n      defaultView !== null &&\n      +defaultView === viewsQuotes.SOLOCITUDPENDIENTE\n    ) {\n      typeValue = this.SOLICITUDES;\n      this.quoteStatusActive = this.PENDING;\n    }\n\n    this.type = new FormControl('');\n    this.type.valueChanges.subscribe(() => {\n      this.getQuotes(this.quoteStatusActive);\n    });\n    this.type.setValue(typeValue, { emitEvent: true });\n\n    this.notificationSubscription = this.notifyService.notification$.subscribe(\n      () => {\n        if (this.selectedQuote) {\n          this.selectedQuote.loading = false;\n          this.selectedQuote = undefined;\n          this.isGoToEmision = false;\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.notificationSubscription)\n      this.notificationSubscription.unsubscribe();\n  }\n\n  getQuotes(statusCode: number) {\n    this.rows = [];\n    this.loadingIndicator = true;\n    const serverDate = localStorage.getItem('date');\n    if (serverDate === null) {\n      this.utilService.getCurrentServerDate().subscribe((data) => {\n        const sDate = data.datetime;\n\n        // Guardo en el store la fecha\n        this.storeQuote.dispatch(\n          new fromQuoteActions.SetServerDateAction(new Date(sDate))\n        );\n\n        // TODO: LA: Provisional mientras se soluciona tomar el serverDate desde el storage\n        this.columns.splice(\n          0,\n          2,\n          {\n            name: 'Fecha',\n            prop: 'updatetime',\n            sortable: true,\n            pipe: new DateFormat('en-US')\n          },\n          {\n            name: 'Vto',\n            prop: 'updatetime',\n            sortable: true,\n            pipe: new DaysAgo(sDate)\n          }\n        );\n        this._getQuotes(statusCode, sDate);\n      });\n    } else {\n      // Guardo en el store la fecha\n      this.storeQuote.dispatch(\n        new fromQuoteActions.SetServerDateAction(new Date(serverDate))\n      );\n\n      // TODO: LA: Provisional mientras se soluciona tomar el serverDate desde el storage\n      this.columns.splice(\n        0,\n        2,\n        {\n          name: 'Fecha',\n          prop: 'updatetime',\n          sortable: true,\n          pipe: new DateFormat('en-US')\n        },\n        {\n          name: 'Vto',\n          prop: 'updatetime',\n          sortable: true,\n          pipe: new DaysAgo(serverDate)\n        }\n      );\n      this._getQuotes(statusCode, serverDate);\n    }\n  }\n\n  private _getQuotes(statusCode: number, serverDate: any) {\n    this.quoteStatusActive = +statusCode;\n    const active = ['withoutUWissues', 'approved'];\n    const pending = ['pendingApproval'];\n    const rejected = ['rejected'];\n    this.rows = [];\n\n    this.quotesRequest = {\n      policytype: 'Submission',\n      uwstatus: null,\n      datesince: moment(serverDate).subtract(15, 'days').toISOString(),\n      dateuntil: serverDate,\n      productcode: null,\n      producer: {\n        code: null\n      },\n      client: {\n        primaryofficialid: {\n          type: null,\n          value: null\n        },\n        firstname: null,\n        lastname: null,\n        companyname: null\n      }\n    };\n\n    // this.loadingIndicator = true;\n\n    this.quotesService\n      .getQuotes(this.quotesRequest)\n      .pipe(\n        switchMap((quotes) => {\n          if (quotes) {\n            return of(\n              quotes.filter((quote) => {\n                // Filtrando por productor\n                // TODO: Descomentar cuando se active el select de productor\n                // if (Number(quote.producer.code) === Number(this.codeProducer)) {\n                //TABLA PARA FILTROS\n                // Estado Job     Estado UW          Descripcion\n                // =============================================================\n                // Borrador       withoutUWissues    No mostrar\n                // Borrador       pendingApproval    Cotizacion con UW pendiente\n                // Borrador       approved           Cotizacion con UW aprobada\n                // Borrador       rejected           Cotizacion con UW rechazada\n                // Cotizado       withoutUWissues    Cotizacion guardada\n                // Cotizado       pendingApproval    Solicitud con UW pendiente\n                // Cotizado       approved           Solicitud con UW aprobada\n                // Cotizado       rejected           Solicitud con UW rechadaza\n                // Contratada                        Poliza\n                // Si tiene FLAG 'solicitud' === true entonces es Poliza\n\n                // Es una cotización\n                if (this.type.value === this.COTIZACIONES) {\n                  // Es borrador (no se debe mostrar)\n                  const borrador =\n                    quote.job.status === 'Borrador' &&\n                    quote.uwstatus === 'withoutUWissues'\n                      ? true\n                      : false;\n\n                  return !quote.solicitud && !quote.policynumber && !borrador;\n                }\n\n                // Es una solicitud\n                if (this.type.value === this.SOLICITUDES) {\n                  return quote.solicitud && !quote.policynumber;\n                }\n              })\n            );\n          } else {\n            this.loadingIndicator = false;\n            return of(null);\n          }\n        }),\n        filter((i: any) => i !== null),\n        map((quotes: any[]) => {\n          // Por issue en ngx-datatables se debe hacer este workaround\n          this.rActive = [];\n          this.rPending = [];\n          this.rRejected = [];\n\n          quotes.forEach((quote: any) => {\n            // Si es una solicitud y tiene inspección pendiente va a Pendientes\n            if (\n              this.type.value === this.SOLICITUDES &&\n              quote.hasOwnProperty('inspection') &&\n              quote.inspection.pending === true\n            ) {\n              this.rPending.push(quote);\n            } else if (active.includes(quote.uwstatus)) {\n              this.rActive.push(quote);\n            } else if (pending.includes(quote.uwstatus)) {\n              this.rPending.push(quote);\n            } else if (rejected.includes(quote.uwstatus)) {\n              this.rRejected.push(quote);\n            }\n          });\n          // Por issue en ngx-datatables se debe hacer este workaround\n          if (this.quoteStatusActive === this.ACTIVE) {\n            this.rows = [...this.rActive];\n          }\n          if (this.quoteStatusActive === this.PENDING) {\n            this.rows = [...this.rPending];\n          }\n          if (this.quoteStatusActive === this.REJECTED) {\n            this.rows = [...this.rRejected];\n          }\n\n          this.quotesStatus[0].qty = this.rActive.length;\n          this.quotesStatus[1].qty = this.rPending.length;\n          this.quotesStatus[2].qty = this.rRejected.length;\n          this.temp = this.rows;\n          this.loadingIndicator = false;\n\n          // MANEJAR EL SOMBREADO DEL FOOTER Y HEADER UNA VEZ CARGADO LOS DATOS\n          setTimeout(() => {\n            this.handleShadowInDatatable();\n          }, 100);\n        })\n      )\n      .subscribe();\n  }\n\n  onContactUsClick() {\n    this.logService.feedback();\n  }\n\n  updateFilter(event: any) {\n    const val = event.target.value.toLowerCase();\n    // filter our data\n    const temp = this.temp.filter(function (d) {\n      return (\n        (d.client.displayname !== undefined &&\n          d.client.displayname.toLowerCase().indexOf(val) !== -1) ||\n        (d.client.primaryofficialid.value !== undefined &&\n          d.client.primaryofficialid.value.indexOf(val) !== -1) ||\n        !val\n      );\n    });\n\n    // update the rows\n    this.rows = temp;\n  }\n\n  toggleExpandRow(row: any, expand: boolean) {\n    if (!expand) {\n      this.table?.rowDetail.collapseAllRows();\n      this.getUW(row.job.number);\n    }\n\n    this.table?.rowDetail.toggleExpandRow(row);\n  }\n\n  getSelectedProducer($event: any) {\n    this.codeProducer = $event;\n    this.getQuotes(this.quoteStatusActive);\n  }\n\n  getUW(job: string) {\n    const uwJob: IQuotesUnderwritersRequest = {\n      job: {\n        number: job\n      }\n    };\n    this.loadingDetails = true;\n    this.quotesService.getQuotesUnderwriters(uwJob).subscribe((data) => {\n      this.uwResponse = data;\n      this.loadingDetails = false;\n    });\n  }\n\n  setCurrentProducer(producer: any) {\n    this.storeProducer.dispatch(\n      new fromProducerActions.SetCurrentProducerAction(producer)\n    );\n\n    this.storePolicy.dispatch(\n      new fromPolicyActions.SetCurrentProducerAction(producer)\n    );\n  }\n\n  setCurrentProducerProfile(profile: any) {\n    this.storeProducer.dispatch(\n      new fromProducerActions.SetCurrentProducerProfile(profile)\n    );\n  }\n\n  goToEmission(policy: any) {\n    this.selectedQuote = policy;\n    policy.loading = true;\n    this.isGoToEmision = true;\n\n    this.storePolicy.dispatch(new fromPolicyActions.ResetPolicyAction());\n    this.storeEmission.dispatch(new fromEmissionActions.ResetEmissionAction());\n\n    this.storeEmission.dispatch(\n      new fromEmissionActions.SetJobNumberFromQuotesAction(policy.job.number)\n    );\n\n    this.storeQuote.dispatch(new fromQuoteActions.SetCurrentLine('motor'));\n\n    if (policy.solicitud && policy.uwstatus === 'approved') {\n      this.storeEmission.dispatch(\n        new fromEmissionActions.SetApprovedEmissionAction(true)\n      );\n    } else if (policy.uwstatus === 'approved') {\n      this.storeQuote.dispatch(\n        new fromQuoteActions.SetApprovedQuoteAction(true)\n      );\n    }\n    this.router.navigateByUrl('/quoting/emission/questions/client');\n  }\n\n  goToQuote(line: any) {\n    if (line === this.lineEnumGroup.MOTOR) {\n      this.storeQuote.dispatch(\n        new fromQuoteActions.SetActiveRouteMotor('producers')\n      );\n      this.storeQuote.dispatch(new fromQuoteActions.SetCurrentLine('motor'));\n      this.router.navigateByUrl('/quoting/quote/questions/producers');\n    } else if (line === this.lineEnumGroup.HOME) {\n      this.storeQuote.dispatch(\n        new fromQuoteActions.SetActiveRouteHomeAction('home/1/zones')\n      );\n      this.storeQuote.dispatch(new fromQuoteActions.SetCurrentLine('home'));\n      this.router.navigateByUrl('/quoting/quote/questions/home/1/zones');\n    }\n  }\n\n  animationHandler(e: AnimationItem) {\n    e.playSegments([[0, 119]]);\n  }\n\n  downloadQuote(policy: any) {\n    policy.loading = true;\n    this.isQuoteDownload = true;\n\n    this.documentationService\n      .getVehicleQuote(policy.job.number)\n      .subscribe((data) => {\n        const linkSource = 'data:application/pdf;base64,' + data.streambase64;\n        const downloadLink = document.createElement('a');\n        const fileName = data.name;\n\n        downloadLink.href = linkSource;\n        downloadLink.download = fileName;\n        downloadLink.click();\n      });\n\n    this.documentationService\n      .getVehicleProducerQuote(policy.job.number)\n      .subscribe((data) => {\n        const linkSource = 'data:application/pdf;base64,' + data.streambase64;\n        const downloadLink = document.createElement('a');\n        const fileName = data.name;\n\n        downloadLink.href = linkSource;\n        downloadLink.download = fileName;\n        downloadLink.click();\n\n        this.isQuoteDownloadOk = true;\n        setTimeout(() => {\n          this.isQuoteDownloadOk = false;\n          policy.loading = false;\n        }, 3000);\n        this.isQuoteDownload = false;\n      });\n  }\n\n  /**\n   * On datatable scroll event\n   *\n   * @memberof QuotesComponent\n   */\n  onDatatableScroll(): void {\n    this.handleShadowInDatatable();\n  }\n\n  /**\n   * Handle shadow in datatable\n   *\n   * @memberof QuotesComponent\n   */\n  handleShadowInDatatable(): void {\n    if (!this.datatable_footer)\n      this.datatable_footer = document.querySelector(\n        '.datatable-footer'\n      ) as HTMLDivElement;\n\n    if (!this.datatable_body)\n      this.datatable_body = document.querySelector(\n        '.datatable-body'\n      ) as HTMLDivElement;\n\n    if (!this.datatable_header)\n      this.datatable_header = document.querySelector(\n        '.datatable-header'\n      ) as HTMLDivElement;\n\n    // Sombra superior\n    if (this.datatable_body.scrollTop === 0) {\n      this.datatable_header.classList.remove('shadow');\n    } else {\n      this.datatable_header.classList.add('shadow');\n    }\n\n    // Sombra inferior\n    if (\n      this.datatable_body.scrollTop + this.datatable_body.clientHeight ===\n      this.datatable_body.scrollHeight\n    ) {\n      this.datatable_footer.classList.remove('shadow');\n    } else {\n      this.datatable_footer.classList.add('shadow');\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\nimport { QUERIES_COMPONENTS } from './components';\nimport { QueriesRoutingModule } from './queries-routing.module';\nimport { QuotesService } from '@sura-platform/features';\n\n@NgModule({\n  imports: [CommonModule, QueriesRoutingModule, SharedModule],\n  declarations: [QUERIES_COMPONENTS],\n  providers: [QuotesService]\n})\nexport class QueriesModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { QueriesComponent, QuotesComponent } from './components';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QueriesComponent,\n    children: [\n      {\n        path: 'quotes',\n        component: QuotesComponent\n      },\n      {\n        path: 'quotes/:view',\n        component: QuotesComponent\n      }\n    ]\n  }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class QueriesRoutingModule {}\n","//! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio Napurí : https://github.com/julionc\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    //! moment.js locale configuration\n\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(\n            '_'\n        ),\n        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n        monthsParse = [\n            /^ene/i,\n            /^feb/i,\n            /^mar/i,\n            /^abr/i,\n            /^may/i,\n            /^jun/i,\n            /^jul/i,\n            /^ago/i,\n            /^sep/i,\n            /^oct/i,\n            /^nov/i,\n            /^dic/i,\n        ],\n        monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    var es = moment.defineLocale('es', {\n        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortDot;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex,\n        monthsShortRegex: monthsRegex,\n        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse,\n        longMonthsParse: monthsParse,\n        shortMonthsParse: monthsParse,\n        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY H:mm',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextDay: function () {\n                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastDay: function () {\n                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[el] dddd [pasado a la' +\n                    (this.hours() !== 1 ? 's' : '') +\n                    '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'en %s',\n            past: 'hace %s',\n            s: 'unos segundos',\n            ss: '%d segundos',\n            m: 'un minuto',\n            mm: '%d minutos',\n            h: 'una hora',\n            hh: '%d horas',\n            d: 'un día',\n            dd: '%d días',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un año',\n            yy: '%d años',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n        invalidDate: 'Fecha invalida',\n    });\n\n    return es;\n\n})));\n"]}