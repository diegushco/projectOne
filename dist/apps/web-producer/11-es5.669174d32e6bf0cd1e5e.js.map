{"version":3,"sources":["webpack:///src/app/features/quoting/components/mobility/mobility.component.html","webpack:///src/app/features/quoting/components/mobility/mobility-routing.module.ts","webpack:///src/app/features/quoting/components/mobility/mobility.component.ts","webpack:///src/app/features/quoting/components/mobility/mobility.module.ts"],"names":["MobilityComponent","MobilityRoutingModule","MobilityModule","routes","path","component","fb","storePolicy","storeQuote","policyAdapter","additionalService","quotingService","routeExtService","disabledTooltip","policy","vehicles","currentVehicle","form","mobility","mobilityPkg","mobilityCompleted","Subject","callCost$","loadingCost","MOBILITY_CODE","MOBILITY_DEFAULT","callCostSubscription","Subscription","formChangesSubscription","getQuoteSubscription","fromUrl","this","getPreviousUrl","split","dispatch","createForm","loadFromStore","pipe","skip","tap","switchMap","motor","forEach","v","packages","filter","p","selected","getCosts","adapt","subscribe","handleCost","disableTooltip","autoClose","open","unsubscribe","group","yes","Validators","required","coverageSum","disable","combineLatest","valueChanges","f","currentPkg","find","rt","hadMobility","coverages","c","pattern","code","terms","value","valid","lastValue","next","select","verifyPackages","loadSumOptions","some","currentMobility","current","patchValue","get","setValidators","enable","getAdditionalAccessorios","adaptAdditional","map","resp","pkg","number","options","pkgs","costs","error","errors","e","externalId","includes","productcode","newPackage","costVehicle","premiums","forChild","AccountService","QuotingService","AditionalAccessoriesService"],"mappings":"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","file":"x","sourcesContent":["<div *ngIf=\"form\" [formGroup]=\"form\">\n  <div class=\"row\">\n    <div\n      class=\"col-lg-9 pr-2 ps pt-4\"\n      style=\"position: relative; max-height: 90vh;\"\n      [perfectScrollbar]=\"{ suppressScrollY: false }\"\n    >\n      <div class=\"row\">\n        <div class=\"offset-lg-3\">\n          <div class=\"row mb-2\">\n            <div class=\"col-lg-12\">\n              <span class=\"tag mr-2\">Nuevo</span>\n              <a\n                href=\"https://www.segurossura.com.ar/wp-content/uploads/2020/06/Movilidad-SURA.pdf\"\n                target=\"_blank\"\n              >\n                <sxf-icon class=\"icon-green\" type=\"info\"></sxf-icon>\n                <span class=\"title\">Info sobre Movilidad Sura</span>\n              </a>\n            </div>\n          </div>\n\n          <div class=\"row mb-2\">\n            <div class=\"col-lg-12\">\n              <label class=\"question\">\n                ¿Querés sumar el seguro de Movilidad a tu póliza?\n              </label>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-lg-5 input-group\">\n              <div\n                #t=\"ngbTooltip\"\n                class=\"form-radio-label\"\n                [ngbTooltip]=\"disabledContent\"\n                [triggers]=\"null\"\n                placement=\"bottom\"\n                tooltipClass=\"disabled-mobility-tooltip\"\n              >\n                <input\n                  type=\"radio\"\n                  name=\"yes\"\n                  id=\"yes\"\n                  value=\"on\"\n                  formControlName=\"yes\"\n                />\n                <label for=\"yes\" class=\"radio-label\">\n                  &nbsp;&nbsp;Sí, quiero sumarla\n                </label>\n\n                <ng-template #disabledContent>\n                  <p>\n                    Este producto no está habilitado para la cobertura\n                    seleccionada. Si quieres sumar Movilidad tendrás que cambiar\n                    de cobertura.\n                  </p>\n                </ng-template>\n              </div>\n            </div>\n            <div class=\"col-lg-6 input-group\">\n              <div class=\"form-radio-label\">\n                <input\n                  type=\"radio\"\n                  name=\"yes\"\n                  id=\"no\"\n                  value=\"off\"\n                  formControlName=\"yes\"\n                />\n                <label for=\"no\" class=\"radio-label\">\n                  &nbsp;&nbsp;No, no quiero sumarla\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <ng-container *ngIf=\"form.get('yes').value === 'on'\">\n        <div class=\"row pt-3\">\n          <div class=\"offset-lg-3 col-lg-3 pl-0\">\n            <label for=\"suma\">Suma asegurada</label>\n            <sxf-select\n              formControlName=\"coverageSum\"\n              [items]=\"mobility\"\n              bindLabel=\"description\"\n              bindValue=\"code\"\n              [multiple]=\"false\"\n              [class]=\"'custom'\"\n              [searchable]=\"true\"\n              [placeholder]=\"'Seleccione suma asegurada'\"\n              [dropdownPosition]=\"'bottom'\"\n              name=\"sumaAsegurada\"\n            ></sxf-select>\n          </div>\n        </div>\n        <div class=\"row pt-4\">\n          <div class=\"offset-lg-3 mr-2\">\n            <img\n              src=\"/assets/mobility/ROBO_Y_DANIO_POR_USO.svg\"\n              alt=\"Robo y daño por uso de Bicicleta/Monopatin/Skates/Rollers\"\n              width=\"30px\"\n              height=\"30px\"\n            />\n          </div>\n          <div class=\"col-lg-6 pl-0 line\">\n            <span>\n              Robo y daño por uso de Bicicleta/Monopatin/Skates/Rollers\n            </span>\n          </div>\n        </div>\n        <div class=\"row pt-3\">\n          <div class=\"offset-lg-3 mr-2\">\n            <img\n              src=\"/assets/mobility/ACCIDENTES_PERSONALES.svg\"\n              alt=\"Accidentes\n          personales\"\n              width=\"30px\"\n              height=\"30px\"\n            />\n          </div>\n          <div class=\"col-lg-6 pl-0 line\">\n            <span>Accidentes personales</span>\n          </div>\n        </div>\n        <div class=\"row pt-3\">\n          <div class=\"offset-lg-3 mr-2\">\n            <img\n              src=\"/assets/mobility/ROBO_AL_DESPLAZARSE.svg\"\n              alt=\"Robo al\n          desplazarse\"\n              width=\"30px\"\n              height=\"30px\"\n            />\n          </div>\n          <div class=\"col-lg-6 pl-0 line\">\n            <span>Robo al desplazarse</span>\n          </div>\n        </div>\n        <div class=\"row pt-3\">\n          <div class=\"offset-lg-3 mr-2\">\n            <img\n              src=\"/assets/mobility/DANIOS_A_TERCEROS.svg\"\n              alt=\"Daños a\n          terceros\"\n              width=\"30px\"\n              height=\"30px\"\n            />\n          </div>\n          <div class=\"col-lg-6 pl-0 line\">\n            <span>Daños a terceros</span>\n          </div>\n        </div>\n        <div class=\"row pt-3\">\n          <div class=\"offset-lg-3 mr-2\">\n            <img\n              src=\"/assets/mobility/ASISTENCIA_MOVILIDAD.svg\"\n              alt=\"Asistencia\n          Movilidad\"\n              width=\"30px\"\n              height=\"30px\"\n            />\n          </div>\n          <div class=\"col-lg-6 pl-0 line\">\n            <span>Asistencia Movilidad</span>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n\n    <div class=\"col-lg-3 px-0 ps\">\n      <sxf-summarycoverage\n        [loadingCost]=\"loadingCost\"\n        (allowCost)=\"allowCost()\"\n      ></sxf-summarycoverage>\n    </div>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MobilityComponent } from './mobility.component';\n\nconst routes: Routes = [{ path: '', component: MobilityComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  declarations: [],\n  providers: []\n})\nexport class MobilityRoutingModule {}\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  AfterViewInit\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Subject, Subscription, combineLatest } from 'rxjs';\nimport { map, tap, switchMap, skip } from 'rxjs/operators';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport {\n  IPolicy,\n  IVehicle,\n  AditionalAccessoriesService,\n  QuotingService,\n  IPackage\n} from '@sura-platform/features';\nimport { ICoverage } from '@sura-platform/features/coverage';\nimport { PolicyAdapter } from '../../adapters/policy.adapter';\nimport * as fromPolicy from '../../state/policy';\nimport * as fromPolicyActions from '../../state/policy/policy.actions';\nimport * as fromQuote from '../quote/state';\nimport * as fromQuoteActions from '../quote/state/quote.actions';\nimport { RouterExtService } from '../../../quoting/components/quote/services/router-ext.service';\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\nimport { IPremium } from '@sura-platform/features/package/interfaces/premium.interface';\n\n@Component({\n  selector: 'sxf-mobility',\n  templateUrl: 'mobility.component.html',\n  styleUrls: ['mobility.component.scss']\n})\nexport class MobilityComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('t') disabledTooltip: NgbTooltip = <NgbTooltip>{};\n\n  policy: IPolicy = <IPolicy>{};\n  vehicles: IVehicle[] = <IVehicle[]>[];\n  currentVehicle: IVehicle = <IVehicle>{};\n\n  form: FormGroup = <FormGroup>{};\n  mobility: any[] = <any[]>[];\n  mobilityPkg: ICoverage = <ICoverage>{};\n  mobilityCompleted: Subject<void> = new Subject();\n\n  callCost$: Subject<IPolicy> = new Subject();\n  loadingCost = false;\n\n  MOBILITY_CODE = 'SURA_CA7_MobilityTheftDamageCov';\n  MOBILITY_DEFAULT = 'SURA_CA7_MobilityTheftDamageOpt3';\n\n  callCostSubscription: Subscription = new Subscription();\n  formChangesSubscription: Subscription = new Subscription();\n  getQuoteSubscription: Subscription = new Subscription();\n\n  /**\n   * Save chunk of previous visited url\n   *\n   * @memberof MobilityComponent\n   */\n  fromUrl = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private storePolicy: Store<fromPolicy.State>,\n    private storeQuote: Store<fromQuote.State>,\n    private policyAdapter: PolicyAdapter,\n    private additionalService: AditionalAccessoriesService,\n    private quotingService: QuotingService,\n    private routeExtService: RouterExtService\n  ) {}\n\n  ngOnInit() {\n    this.fromUrl = <string>this.routeExtService.getPreviousUrl().split('/')[2];\n    // Marco la ruta como visitada\n    this.storeQuote.dispatch(\n      new fromQuoteActions.SetMobilityVisitedAction(true)\n    );\n\n    this.createForm();\n    this.loadFromStore();\n\n    // Escucho las llamadas a callCost para llamar al servicio\n    // de cost\n    this.callCostSubscription = this.callCost$\n      .pipe(\n        skip(1),\n        tap(() => (this.loadingCost = true)),\n        switchMap(() => {\n          const policy = cloneDeep(this.policy) as IPolicy;\n\n          policy.motor.vehicles.forEach((v) => {\n            v.packages = <IPackage[]>v?.packages?.filter((p) => p.selected);\n          });\n\n          return this.quotingService.getCosts(this.policyAdapter.adapt(policy));\n        })\n      )\n      .subscribe((policy) => this.handleCost(policy));\n  }\n\n  ngAfterViewInit() {\n    if (this.currentVehicle) {\n      this.disabledTooltip.disableTooltip = true;\n    } else {\n      this.disabledTooltip.autoClose = false;\n      this.disabledTooltip.open();\n    }\n  }\n\n  ngOnDestroy() {\n    this.callCostSubscription?.unsubscribe();\n    this.formChangesSubscription?.unsubscribe();\n  }\n\n  /**\n   * Create mobility form\n   *\n   * @memberof MobilityComponent\n   */\n  createForm() {\n    this.form = this.fb.group({\n      yes: ['off', Validators.required],\n      coverageSum: []\n    });\n    this.form.disable();\n\n    // Escucho los cambio del formulario para llamar a costs\n    // con el valor de movilidad seleccionado\n    this.formChangesSubscription = combineLatest([\n      this.form.valueChanges.pipe(skip(1)),\n      this.mobilityCompleted\n    ]).subscribe(([f]) => {\n      if (!this.currentVehicle) return;\n\n      const currentPkg: IPackage = this.currentVehicle.packages?.find(\n        (rt) => rt.selected\n      ) as IPackage;\n      // Verifico si tenía movilidad ese paquete para no recotizar\n      // si selecciono continuar sin movilidad\n      const hadMobility: ICoverage = <ICoverage>(\n        cloneDeep(\n          currentPkg?.coverages?.find(\n            (c) => c.pattern.code === this.MOBILITY_CODE\n          )\n        )\n      );\n\n      currentPkg.coverages = <ICoverage[]>(\n        currentPkg?.coverages?.filter(\n          (c) => c.pattern.code !== this.MOBILITY_CODE\n        )\n      );\n\n      if (f.yes === 'on' && f.coverageSum && this.mobilityPkg) {\n        this.mobilityPkg.terms[0].value = f.coverageSum;\n        currentPkg.coverages = <ICoverage[]>[\n          ...currentPkg.coverages,\n          this.mobilityPkg\n        ];\n      }\n\n      this.storeQuote.dispatch(\n        new fromQuoteActions.SetMobilityFormValidityAction(this.form.valid)\n      );\n\n      // Si no quiero movilidad y el paquete no tenía movilidad, entonces no recotizo\n      let lastValue: any = currentPkg?.coverages?.find(\n        (c) => c.pattern.code === this.MOBILITY_CODE\n      );\n      lastValue =\n        typeof lastValue?.terms[0].value === 'object'\n          ? lastValue?.terms[0].value['current']\n          : lastValue?.terms[0].value;\n\n      const shouldCost = hadMobility?.terms[0].value !== lastValue;\n\n      if (!shouldCost) return;\n\n      this.callCost$.next();\n    });\n  }\n\n  /**\n   * Read policy info from store\n   *\n   * @memberof MobilityComponent\n   */\n  loadFromStore() {\n    this.storePolicy\n      .select(fromPolicy.getPolicyData)\n      .subscribe((policy) => {\n        this.policy = cloneDeep(policy);\n        this.vehicles = this.policy.motor.vehicles;\n\n        this.verifyPackages();\n        this.loadSumOptions();\n      })\n      .unsubscribe();\n  }\n\n  /**\n   * Function to find packages other than code 'A' and if they have mobility\n   *\n   * @memberof MobilityComponent\n   */\n  verifyPackages() {\n    // Busco un vehículo que tenga el cobertura de movilidad y si no lo tiene, busco\n    // el primero que no sea RC\n    this.currentVehicle =\n      <IVehicle>(\n        this.vehicles.find((v) =>\n          v.packages?.find(\n            (p) =>\n              p.selected &&\n              p.code !== 'A' &&\n              p?.coverages?.some((c) => c.pattern.code === this.MOBILITY_CODE)\n          )\n        )\n      ) ||\n      this.vehicles.find((v) =>\n        v.packages?.find((p) => p.selected && p.code !== 'A')\n      );\n\n    if (this.currentVehicle) {\n      // Si encontré uno y tiene movilidad, verifico qué valor de movilidad tiene\n      let currentMobility = this.currentVehicle.packages\n        ?.find(\n          (p) =>\n            p.selected &&\n            p.coverages?.some((c) => c.pattern.code === this.MOBILITY_CODE)\n        )\n        ?.coverages?.find((c) => c.pattern.code === this.MOBILITY_CODE)\n        ?.terms[0]?.value;\n\n      if (currentMobility) {\n        currentMobility = currentMobility?.current || (currentMobility as any);\n\n        // Entonces, ingreso este valor en el formulario indicando que tiene movilidad\n        this.form.patchValue({\n          yes: 'on',\n          coverageSum: currentMobility\n        });\n      } else if (this.fromUrl === 'emission') {\n        // Si se viene de emisión y no hay movilidad se asume NO\n        this.form.patchValue({\n          yes: 'off',\n          coverageSum: this.MOBILITY_DEFAULT\n        });\n      } else {\n        // Si no la tuviera y no viene de emisión, entonces dejo el formulario vacío en inválido\n        this.form.patchValue({\n          yes: null,\n          coverageSum: this.MOBILITY_DEFAULT\n        });\n      }\n\n      // Tenga o no movilidad, si no es RC, el campo de movilidad\n      this.form.get('coverageSum')?.setValidators(Validators.required);\n      this.form.enable();\n    } else {\n      this.storeQuote.dispatch(\n        new fromQuoteActions.SetMobilityFormValidityAction(true)\n      );\n    }\n  }\n\n  /**\n   * Get mobility coverage options\n   *\n   * @memberof MobilityComponent\n   */\n  loadSumOptions() {\n    if (!this.currentVehicle) return;\n\n    this.additionalService\n      .getAdditionalAccessorios(this.policyAdapter.adaptAdditional(this.policy))\n      .pipe(\n        map((resp) => {\n          // Dentro de la respueta de adicionales, identifico el paquete\n          // de movilidad y lo guardo en la variable mobilityPkg\n          const pkg: ICoverage = resp.motor?.vehicles\n            .find((v: any) => v.number === this.currentVehicle.number)\n            ?.package.coverages.find(\n              (c: any) => c.pattern.code === this.MOBILITY_CODE\n            );\n\n          pkg.terms[0].value =\n            typeof pkg.terms[0].value === 'object'\n              ? pkg.terms[0].value\n              : pkg.terms[0].value;\n\n          this.mobilityPkg = pkg;\n\n          // Retorno únicamente las opciones que utilizará el select\n          return pkg?.terms[0].options || [];\n        })\n      )\n      .subscribe((pkgs) => {\n        this.mobility = pkgs;\n        this.mobilityCompleted.next();\n      });\n  }\n\n  /**\n   * Function called when the sidebar form is valid\n   *\n   * @memberof MobilityComponent\n   */\n  allowCost() {\n    this.callCost$.next();\n  }\n\n  /**\n   * Function to update costs, premiums, etc of vehicles\n   * from costs response\n   *\n   * @param {IPolicy} policy\n   * @memberof MobilityComponent\n   */\n  handleCost(policy: IPolicy) {\n    this.storePolicy.dispatch(\n      new fromPolicyActions.UpdateCostsAction(policy.costs)\n    );\n\n    this.vehicles.forEach((v) => {\n      // Actualizar premiums con el resultado de la nueva cotización\n      const selected = v?.packages?.find((p) => p.selected);\n\n      // Buscar error en motor.errors de este vehículo y paquete\n      const error = policy.errors?.find((e) =>\n        e.externalId\n          .split('&')\n          .includes(`${policy.productcode},${v.number},${selected?.code}`)\n      );\n\n      // Busco los datos del paquete con la nueva cotización si existiera\n      const newPackage = policy?.motor?.vehicles\n        ?.find((costVehicle) => costVehicle.number === v.number)\n        ?.packages?.find((p) => p.code === selected?.code);\n\n      if (!error?.code && selected) {\n        selected.premiums = <IPremium>newPackage?.premiums;\n      } else if (selected) {\n        selected.premiums = null;\n      }\n    });\n\n    this.loadingCost = false;\n\n    this.storePolicy.dispatch(\n      new fromPolicyActions.UpdateVehicleAction(this.vehicles)\n    );\n\n    this.storeQuote.dispatch(\n      new fromQuoteActions.SetCostsResponseAction(policy)\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MobilityRoutingModule } from './mobility-routing.module';\nimport { SharedModule } from '../../../shared/shared.module';\n\nimport { MobilityComponent } from './mobility.component';\nimport {\n  QuotingService,\n  AccountService,\n  AditionalAccessoriesService\n} from '@sura-platform/features';\n\n@NgModule({\n  imports: [CommonModule, SharedModule, MobilityRoutingModule],\n  exports: [],\n  declarations: [MobilityComponent],\n  providers: [AccountService, QuotingService, AditionalAccessoriesService]\n})\nexport class MobilityModule {}\n"]}